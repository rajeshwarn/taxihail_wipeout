//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17379
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

namespace TaxiMobile.Lib.Services.IBS
{ // 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [WebServiceBinding(Name="IWebAccount3binding", Namespace="http://tempuri.org/")]
    [SoapInclude(typeof(TVehicleTypeItem))]
    [SoapInclude(typeof(TException))]
    public partial class WebAccount3Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
        private System.Threading.SendOrPostCallback SaveAccountOperationCompleted;
    
        private System.Threading.SendOrPostCallback GetWEBAccountOperationCompleted;
    
        private System.Threading.SendOrPostCallback SaveAccount2OperationCompleted;
    
        private System.Threading.SendOrPostCallback GetWEBAccount2OperationCompleted;
    
        private System.Threading.SendOrPostCallback ChangeAccountLoginOperationCompleted;
    
        private System.Threading.SendOrPostCallback SaveAccount3OperationCompleted;
    
        private System.Threading.SendOrPostCallback GetWEBAccount3OperationCompleted;
    
        /// <remarks/>
        public WebAccount3Service() {
            this.Url = "http://72.38.252.190:6929/XDS_IASPI.DLL/soap/IWebAccount3";
        }
    
        /// <remarks/>
        public event SaveAccountCompletedEventHandler SaveAccountCompleted;
    
        /// <remarks/>
        public event GetWEBAccountCompletedEventHandler GetWEBAccountCompleted;
    
        /// <remarks/>
        public event SaveAccount2CompletedEventHandler SaveAccount2Completed;
    
        /// <remarks/>
        public event GetWEBAccount2CompletedEventHandler GetWEBAccount2Completed;
    
        /// <remarks/>
        public event ChangeAccountLoginCompletedEventHandler ChangeAccountLoginCompleted;
    
        /// <remarks/>
        public event SaveAccount3CompletedEventHandler SaveAccount3Completed;
    
        /// <remarks/>
        public event GetWEBAccount3CompletedEventHandler GetWEBAccount3Completed;
    
        /// <remarks/>
        [SoapRpcMethod("urn:WebAccount3Intf-IWebAccount3#SaveAccount", RequestNamespace="urn:WebAccount3Intf-IWebAccount3", ResponseNamespace="urn:WebAccount3Intf-IWebAccount3")]
        [return: SoapElement("return")]
        public int SaveAccount(string Login, string Password, TBookAccount Account) {
            object[] results = this.Invoke("SaveAccount", new object[] {
                                                                           Login,
                                                                           Password,
                                                                           Account});
            return ((int)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BeginSaveAccount(string Login, string Password, TBookAccount Account, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveAccount", new object[] {
                                                                    Login,
                                                                    Password,
                                                                    Account}, callback, asyncState);
        }
    
        /// <remarks/>
        public int EndSaveAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
    
        /// <remarks/>
        public void SaveAccountAsync(string Login, string Password, TBookAccount Account) {
            this.SaveAccountAsync(Login, Password, Account, null);
        }
    
        /// <remarks/>
        public void SaveAccountAsync(string Login, string Password, TBookAccount Account, object userState) {
            if ((this.SaveAccountOperationCompleted == null)) {
                this.SaveAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAccountOperationCompleted);
            }
            this.InvokeAsync("SaveAccount", new object[] {
                                                             Login,
                                                             Password,
                                                             Account}, this.SaveAccountOperationCompleted, userState);
        }
    
        private void OnSaveAccountOperationCompleted(object arg) {
            if ((this.SaveAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAccountCompleted(this, new SaveAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    
        /// <remarks/>
        [SoapRpcMethod("urn:WebAccount3Intf-IWebAccount3#GetWEBAccount", RequestNamespace="urn:WebAccount3Intf-IWebAccount3", ResponseNamespace="urn:WebAccount3Intf-IWebAccount3")]
        [return: SoapElement("return")]
        public TBookAccount GetWEBAccount(string Login, string Password, int CompanyID, string WEBAccountID, string WEBPassword) {
            object[] results = this.Invoke("GetWEBAccount", new object[] {
                                                                             Login,
                                                                             Password,
                                                                             CompanyID,
                                                                             WEBAccountID,
                                                                             WEBPassword});
            return ((TBookAccount)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BeginGetWEBAccount(string Login, string Password, int CompanyID, string WEBAccountID, string WEBPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWEBAccount", new object[] {
                                                                      Login,
                                                                      Password,
                                                                      CompanyID,
                                                                      WEBAccountID,
                                                                      WEBPassword}, callback, asyncState);
        }
    
        /// <remarks/>
        public TBookAccount EndGetWEBAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TBookAccount)(results[0]));
        }
    
        /// <remarks/>
        public void GetWEBAccountAsync(string Login, string Password, int CompanyID, string WEBAccountID, string WEBPassword) {
            this.GetWEBAccountAsync(Login, Password, CompanyID, WEBAccountID, WEBPassword, null);
        }
    
        /// <remarks/>
        public void GetWEBAccountAsync(string Login, string Password, int CompanyID, string WEBAccountID, string WEBPassword, object userState) {
            if ((this.GetWEBAccountOperationCompleted == null)) {
                this.GetWEBAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWEBAccountOperationCompleted);
            }
            this.InvokeAsync("GetWEBAccount", new object[] {
                                                               Login,
                                                               Password,
                                                               CompanyID,
                                                               WEBAccountID,
                                                               WEBPassword}, this.GetWEBAccountOperationCompleted, userState);
        }
    
        private void OnGetWEBAccountOperationCompleted(object arg) {
            if ((this.GetWEBAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWEBAccountCompleted(this, new GetWEBAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    
        /// <remarks/>
        [SoapRpcMethod("urn:WebAccount3Intf-IWebAccount3#SaveAccount2", RequestNamespace="urn:WebAccount3Intf-IWebAccount3", ResponseNamespace="urn:WebAccount3Intf-IWebAccount3")]
        [return: SoapElement("return")]
        public int SaveAccount2(string Login, string Password, TBookAccount2 Account) {
            object[] results = this.Invoke("SaveAccount2", new object[] {
                                                                            Login,
                                                                            Password,
                                                                            Account});
            return ((int)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BeginSaveAccount2(string Login, string Password, TBookAccount2 Account, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveAccount2", new object[] {
                                                                     Login,
                                                                     Password,
                                                                     Account}, callback, asyncState);
        }
    
        /// <remarks/>
        public int EndSaveAccount2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
    
        /// <remarks/>
        public void SaveAccount2Async(string Login, string Password, TBookAccount2 Account) {
            this.SaveAccount2Async(Login, Password, Account, null);
        }
    
        /// <remarks/>
        public void SaveAccount2Async(string Login, string Password, TBookAccount2 Account, object userState) {
            if ((this.SaveAccount2OperationCompleted == null)) {
                this.SaveAccount2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAccount2OperationCompleted);
            }
            this.InvokeAsync("SaveAccount2", new object[] {
                                                              Login,
                                                              Password,
                                                              Account}, this.SaveAccount2OperationCompleted, userState);
        }
    
        private void OnSaveAccount2OperationCompleted(object arg) {
            if ((this.SaveAccount2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAccount2Completed(this, new SaveAccount2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    
        /// <remarks/>
        [SoapRpcMethod("urn:WebAccount3Intf-IWebAccount3#GetWEBAccount2", RequestNamespace="urn:WebAccount3Intf-IWebAccount3", ResponseNamespace="urn:WebAccount3Intf-IWebAccount3")]
        [return: SoapElement("return")]
        public TBookAccount2 GetWEBAccount2(string Login, string Password, int CompanyID, string WEBAccountID, string WEBPassword) {
            object[] results = this.Invoke("GetWEBAccount2", new object[] {
                                                                              Login,
                                                                              Password,
                                                                              CompanyID,
                                                                              WEBAccountID,
                                                                              WEBPassword});
            return ((TBookAccount2)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BeginGetWEBAccount2(string Login, string Password, int CompanyID, string WEBAccountID, string WEBPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWEBAccount2", new object[] {
                                                                       Login,
                                                                       Password,
                                                                       CompanyID,
                                                                       WEBAccountID,
                                                                       WEBPassword}, callback, asyncState);
        }
    
        /// <remarks/>
        public TBookAccount2 EndGetWEBAccount2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TBookAccount2)(results[0]));
        }
    
        /// <remarks/>
        public void GetWEBAccount2Async(string Login, string Password, int CompanyID, string WEBAccountID, string WEBPassword) {
            this.GetWEBAccount2Async(Login, Password, CompanyID, WEBAccountID, WEBPassword, null);
        }
    
        /// <remarks/>
        public void GetWEBAccount2Async(string Login, string Password, int CompanyID, string WEBAccountID, string WEBPassword, object userState) {
            if ((this.GetWEBAccount2OperationCompleted == null)) {
                this.GetWEBAccount2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWEBAccount2OperationCompleted);
            }
            this.InvokeAsync("GetWEBAccount2", new object[] {
                                                                Login,
                                                                Password,
                                                                CompanyID,
                                                                WEBAccountID,
                                                                WEBPassword}, this.GetWEBAccount2OperationCompleted, userState);
        }
    
        private void OnGetWEBAccount2OperationCompleted(object arg) {
            if ((this.GetWEBAccount2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWEBAccount2Completed(this, new GetWEBAccount2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    
        /// <remarks/>
        [SoapRpcMethod("urn:WebAccount3Intf-IWebAccount3#ChangeAccountLogin", RequestNamespace="urn:WebAccount3Intf-IWebAccount3", ResponseNamespace="urn:WebAccount3Intf-IWebAccount3")]
        [return: SoapElement("return")]
        public int ChangeAccountLogin(string Login, string Password, string OldUserLogin, string OldUserPassword, string NewUserLogin, string NewUserPassword) {
            object[] results = this.Invoke("ChangeAccountLogin", new object[] {
                                                                                  Login,
                                                                                  Password,
                                                                                  OldUserLogin,
                                                                                  OldUserPassword,
                                                                                  NewUserLogin,
                                                                                  NewUserPassword});
            return ((int)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BeginChangeAccountLogin(string Login, string Password, string OldUserLogin, string OldUserPassword, string NewUserLogin, string NewUserPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeAccountLogin", new object[] {
                                                                           Login,
                                                                           Password,
                                                                           OldUserLogin,
                                                                           OldUserPassword,
                                                                           NewUserLogin,
                                                                           NewUserPassword}, callback, asyncState);
        }
    
        /// <remarks/>
        public int EndChangeAccountLogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
    
        /// <remarks/>
        public void ChangeAccountLoginAsync(string Login, string Password, string OldUserLogin, string OldUserPassword, string NewUserLogin, string NewUserPassword) {
            this.ChangeAccountLoginAsync(Login, Password, OldUserLogin, OldUserPassword, NewUserLogin, NewUserPassword, null);
        }
    
        /// <remarks/>
        public void ChangeAccountLoginAsync(string Login, string Password, string OldUserLogin, string OldUserPassword, string NewUserLogin, string NewUserPassword, object userState) {
            if ((this.ChangeAccountLoginOperationCompleted == null)) {
                this.ChangeAccountLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeAccountLoginOperationCompleted);
            }
            this.InvokeAsync("ChangeAccountLogin", new object[] {
                                                                    Login,
                                                                    Password,
                                                                    OldUserLogin,
                                                                    OldUserPassword,
                                                                    NewUserLogin,
                                                                    NewUserPassword}, this.ChangeAccountLoginOperationCompleted, userState);
        }
    
        private void OnChangeAccountLoginOperationCompleted(object arg) {
            if ((this.ChangeAccountLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeAccountLoginCompleted(this, new ChangeAccountLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    
        /// <remarks/>
        [SoapRpcMethod("urn:WebAccount3Intf-IWebAccount3#SaveAccount3", RequestNamespace="urn:WebAccount3Intf-IWebAccount3", ResponseNamespace="urn:WebAccount3Intf-IWebAccount3")]
        [return: SoapElement("return")]
        public int SaveAccount3(string Login, string Password, TBookAccount3 Account) {
            object[] results = this.Invoke("SaveAccount3", new object[] {
                                                                            Login,
                                                                            Password,
                                                                            Account});
            return ((int)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BeginSaveAccount3(string Login, string Password, TBookAccount3 Account, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SaveAccount3", new object[] {
                                                                     Login,
                                                                     Password,
                                                                     Account}, callback, asyncState);
        }
    
        /// <remarks/>
        public int EndSaveAccount3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
    
        /// <remarks/>
        public void SaveAccount3Async(string Login, string Password, TBookAccount3 Account) {
            this.SaveAccount3Async(Login, Password, Account, null);
        }
    
        /// <remarks/>
        public void SaveAccount3Async(string Login, string Password, TBookAccount3 Account, object userState) {
            if ((this.SaveAccount3OperationCompleted == null)) {
                this.SaveAccount3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAccount3OperationCompleted);
            }
            this.InvokeAsync("SaveAccount3", new object[] {
                                                              Login,
                                                              Password,
                                                              Account}, this.SaveAccount3OperationCompleted, userState);
        }
    
        private void OnSaveAccount3OperationCompleted(object arg) {
            if ((this.SaveAccount3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAccount3Completed(this, new SaveAccount3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    
        /// <remarks/>
        [SoapRpcMethod("urn:WebAccount3Intf-IWebAccount3#GetWEBAccount3", RequestNamespace="urn:WebAccount3Intf-IWebAccount3", ResponseNamespace="urn:WebAccount3Intf-IWebAccount3")]
        [return: SoapElement("return")]
        public TBookAccount3 GetWEBAccount3(string Login, string Password, int CompanyID, string WEBAccountID, string WEBPassword) {
            object[] results = this.Invoke("GetWEBAccount3", new object[] {
                                                                              Login,
                                                                              Password,
                                                                              CompanyID,
                                                                              WEBAccountID,
                                                                              WEBPassword});
            return ((TBookAccount3)(results[0]));
        }
    
        /// <remarks/>
        public System.IAsyncResult BeginGetWEBAccount3(string Login, string Password, int CompanyID, string WEBAccountID, string WEBPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWEBAccount3", new object[] {
                                                                       Login,
                                                                       Password,
                                                                       CompanyID,
                                                                       WEBAccountID,
                                                                       WEBPassword}, callback, asyncState);
        }
    
        /// <remarks/>
        public TBookAccount3 EndGetWEBAccount3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TBookAccount3)(results[0]));
        }
    
        /// <remarks/>
        public void GetWEBAccount3Async(string Login, string Password, int CompanyID, string WEBAccountID, string WEBPassword) {
            this.GetWEBAccount3Async(Login, Password, CompanyID, WEBAccountID, WEBPassword, null);
        }
    
        /// <remarks/>
        public void GetWEBAccount3Async(string Login, string Password, int CompanyID, string WEBAccountID, string WEBPassword, object userState) {
            if ((this.GetWEBAccount3OperationCompleted == null)) {
                this.GetWEBAccount3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWEBAccount3OperationCompleted);
            }
            this.InvokeAsync("GetWEBAccount3", new object[] {
                                                                Login,
                                                                Password,
                                                                CompanyID,
                                                                WEBAccountID,
                                                                WEBPassword}, this.GetWEBAccount3OperationCompleted, userState);
        }
    
        private void OnGetWEBAccount3OperationCompleted(object arg) {
            if ((this.GetWEBAccount3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWEBAccount3Completed(this, new GetWEBAccount3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [SoapInclude(typeof(TBookAccount2))]
    [SoapInclude(typeof(TBookAccount3))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [SoapType(Namespace="urn:TypeAccount")]
    public partial class TBookAccount {
    
        private int serviceProviderIDField;
    
        private int accountIDField;
    
        private TAccountType accTypeField;
    
        private TWEBAccountStatus wEBStatusField;
    
        private string wEBIDField;
    
        private string wEBPasswordField;
    
        private string accountNameField;
    
        private string titleField;
    
        private string lastNameField;
    
        private string firstNameField;
    
        private string phoneField;
    
        private string faxField;
    
        private string eMailField;
    
        private TWEBAddress addressField;
    
        private string cCNumberField;
    
        private string cCHolderField;
    
        private string cCStartMonthField;
    
        private string cCStartYearField;
    
        private string cCEndMonthField;
    
        private string cCEndYearField;
    
        private string cCSecurityCodeField;
    
        private string cCIssueNumberField;
    
        /// <remarks/>
        public int ServiceProviderID {
            get {
                return this.serviceProviderIDField;
            }
            set {
                this.serviceProviderIDField = value;
            }
        }
    
        /// <remarks/>
        public int AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
    
        /// <remarks/>
        public TAccountType AccType {
            get {
                return this.accTypeField;
            }
            set {
                this.accTypeField = value;
            }
        }
    
        /// <remarks/>
        public TWEBAccountStatus WEBStatus {
            get {
                return this.wEBStatusField;
            }
            set {
                this.wEBStatusField = value;
            }
        }
    
        /// <remarks/>
        public string WEBID {
            get {
                return this.wEBIDField;
            }
            set {
                this.wEBIDField = value;
            }
        }
    
        /// <remarks/>
        public string WEBPassword {
            get {
                return this.wEBPasswordField;
            }
            set {
                this.wEBPasswordField = value;
            }
        }
    
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
    
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
    
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
    
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
    
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
    
        /// <remarks/>
        public string eMail {
            get {
                return this.eMailField;
            }
            set {
                this.eMailField = value;
            }
        }
    
        /// <remarks/>
        public TWEBAddress Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
    
        /// <remarks/>
        public string CCNumber {
            get {
                return this.cCNumberField;
            }
            set {
                this.cCNumberField = value;
            }
        }
    
        /// <remarks/>
        public string CCHolder {
            get {
                return this.cCHolderField;
            }
            set {
                this.cCHolderField = value;
            }
        }
    
        /// <remarks/>
        public string CCStartMonth {
            get {
                return this.cCStartMonthField;
            }
            set {
                this.cCStartMonthField = value;
            }
        }
    
        /// <remarks/>
        public string CCStartYear {
            get {
                return this.cCStartYearField;
            }
            set {
                this.cCStartYearField = value;
            }
        }
    
        /// <remarks/>
        public string CCEndMonth {
            get {
                return this.cCEndMonthField;
            }
            set {
                this.cCEndMonthField = value;
            }
        }
    
        /// <remarks/>
        public string CCEndYear {
            get {
                return this.cCEndYearField;
            }
            set {
                this.cCEndYearField = value;
            }
        }
    
        /// <remarks/>
        public string CCSecurityCode {
            get {
                return this.cCSecurityCodeField;
            }
            set {
                this.cCSecurityCodeField = value;
            }
        }
    
        /// <remarks/>
        public string CCIssueNumber {
            get {
                return this.cCIssueNumberField;
            }
            set {
                this.cCIssueNumberField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [Serializable()]
    [SoapType(Namespace="urn:TypeWEB")]
    public enum TAccountType {
    
        /// <remarks/>
        actNone,
    
        /// <remarks/>
        actWebAccount,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [Serializable()]
    [SoapType(Namespace="urn:TypeWEB")]
    public enum TWEBAccountStatus {
    
        /// <remarks/>
        wasNone,
    
        /// <remarks/>
        wasCreate,
    
        /// <remarks/>
        wasUpdate,
    
        /// <remarks/>
        wasNotUnique,
    
        /// <remarks/>
        wasMoved,
    
        /// <remarks/>
        wasValid,
    
        /// <remarks/>
        wasSuspended,
    }

    /// <remarks/>
    [SoapInclude(typeof(TWEBFavotiteAddress))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [SoapType(Namespace="urn:TypeOrder")]
    public partial class TWEBAddress {
    
        private string streetPlaceField;
    
        private string aptBazField;
    
        private string postalField;
    
        private int cityIDField;
    
        private int regionIDField;
    
        private int countryIDField;
    
        private double longitudeField;
    
        private double latitudeField;
    
        private int addressIDField;
    
        private TWEBTimeStamp stopTimeField;
    
        private int stopOrderField;
    
        private int runOrderField;
    
        private int stopPassField;
    
        /// <remarks/>
        public string StreetPlace {
            get {
                return this.streetPlaceField;
            }
            set {
                this.streetPlaceField = value;
            }
        }
    
        /// <remarks/>
        public string AptBaz {
            get {
                return this.aptBazField;
            }
            set {
                this.aptBazField = value;
            }
        }
    
        /// <remarks/>
        public string Postal {
            get {
                return this.postalField;
            }
            set {
                this.postalField = value;
            }
        }
    
        /// <remarks/>
        public int CityID {
            get {
                return this.cityIDField;
            }
            set {
                this.cityIDField = value;
            }
        }
    
        /// <remarks/>
        public int RegionID {
            get {
                return this.regionIDField;
            }
            set {
                this.regionIDField = value;
            }
        }
    
        /// <remarks/>
        public int CountryID {
            get {
                return this.countryIDField;
            }
            set {
                this.countryIDField = value;
            }
        }
    
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
    
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
    
        /// <remarks/>
        public int AddressID {
            get {
                return this.addressIDField;
            }
            set {
                this.addressIDField = value;
            }
        }
    
        /// <remarks/>
        public TWEBTimeStamp StopTime {
            get {
                return this.stopTimeField;
            }
            set {
                this.stopTimeField = value;
            }
        }
    
        /// <remarks/>
        public int StopOrder {
            get {
                return this.stopOrderField;
            }
            set {
                this.stopOrderField = value;
            }
        }
    
        /// <remarks/>
        public int RunOrder {
            get {
                return this.runOrderField;
            }
            set {
                this.runOrderField = value;
            }
        }
    
        /// <remarks/>
        public int StopPass {
            get {
                return this.stopPassField;
            }
            set {
                this.stopPassField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [SoapType(Namespace="urn:TypeOrder")]
    public partial class TWEBTimeStamp {
    
        private int yearField;
    
        private int monthField;
    
        private int dayField;
    
        private int hourField;
    
        private int minuteField;
    
        private int secondField;
    
        private int fractionsField;
    
        /// <remarks/>
        public int Year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
            }
        }
    
        /// <remarks/>
        public int Month {
            get {
                return this.monthField;
            }
            set {
                this.monthField = value;
            }
        }
    
        /// <remarks/>
        public int Day {
            get {
                return this.dayField;
            }
            set {
                this.dayField = value;
            }
        }
    
        /// <remarks/>
        public int Hour {
            get {
                return this.hourField;
            }
            set {
                this.hourField = value;
            }
        }
    
        /// <remarks/>
        public int Minute {
            get {
                return this.minuteField;
            }
            set {
                this.minuteField = value;
            }
        }
    
        /// <remarks/>
        public int Second {
            get {
                return this.secondField;
            }
            set {
                this.secondField = value;
            }
        }
    
        /// <remarks/>
        public int Fractions {
            get {
                return this.fractionsField;
            }
            set {
                this.fractionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [SoapType(Namespace="urn:TypeAccount")]
    public partial class TVehicleTypeItem {
    
        private string nameField;
    
        private int capacityField;
    
        private int idField;
    
        private bool isDefaultField;
    
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    
        /// <remarks/>
        public int Capacity {
            get {
                return this.capacityField;
            }
            set {
                this.capacityField = value;
            }
        }
    
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    
        /// <remarks/>
        public bool isDefault {
            get {
                return this.isDefaultField;
            }
            set {
                this.isDefaultField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [SoapType(Namespace="urn:TypeOrder")]
    public partial class TException {
    
        private int exIDField;
    
        private string exNameField;
    
        private int exValueField;
    
        /// <remarks/>
        public int ExID {
            get {
                return this.exIDField;
            }
            set {
                this.exIDField = value;
            }
        }
    
        /// <remarks/>
        public string ExName {
            get {
                return this.exNameField;
            }
            set {
                this.exNameField = value;
            }
        }
    
        /// <remarks/>
        public int ExValue {
            get {
                return this.exValueField;
            }
            set {
                this.exValueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [SoapType(Namespace="urn:TypeAccount")]
    public partial class TPromptField {
    
        private int fieldIDField;
    
        private string captionField;
    
        private bool requiredField;
    
        private bool searchField;
    
        private bool hasPasswordField;
    
        private string defaultValueField;
    
        private string[] valueListField;
    
        /// <remarks/>
        public int FieldID {
            get {
                return this.fieldIDField;
            }
            set {
                this.fieldIDField = value;
            }
        }
    
        /// <remarks/>
        public string Caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
    
        /// <remarks/>
        public bool Required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
            }
        }
    
        /// <remarks/>
        public bool Search {
            get {
                return this.searchField;
            }
            set {
                this.searchField = value;
            }
        }
    
        /// <remarks/>
        public bool HasPassword {
            get {
                return this.hasPasswordField;
            }
            set {
                this.hasPasswordField = value;
            }
        }
    
        /// <remarks/>
        public string DefaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
    
        /// <remarks/>
        public string[] ValueList {
            get {
                return this.valueListField;
            }
            set {
                this.valueListField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [SoapType(Namespace="urn:TypeOrder")]
    public partial class TWEBFavotiteAddress : TWEBAddress {
    
        private string addressAliasField;
    
        /// <remarks/>
        public string AddressAlias {
            get {
                return this.addressAliasField;
            }
            set {
                this.addressAliasField = value;
            }
        }
    }

    /// <remarks/>
    [SoapInclude(typeof(TBookAccount3))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [SoapType(Namespace="urn:TypeAccount")]
    public partial class TBookAccount2 : TBookAccount {
    
        private int ownerIDField;
    
        private int ownerTypeField;
    
        private bool textBackField;
    
        private bool emailBackField;
    
        private bool callBackField;
    
        private bool accountAdminField;
    
        private bool priorityField;
    
        private string email2Field;
    
        private string mobilePhoneField;
    
        private string businessTypeField;
    
        private string userPositionField;
    
        private string tripRemarkField;
    
        private string adminNotesField;
    
        private string lPointsField;
    
        private string barCodeField;
    
        private string deptNameField;
    
        private int driverRatingField;
    
        private int callbackPhoneField;
    
        private int eMailbackAddressField;
    
        private TPromptField prompt1Field;
    
        private TPromptField prompt2Field;
    
        private TPromptField prompt3Field;
    
        private TPromptField prompt4Field;
    
        private TPromptField prompt5Field;
    
        private TPromptField prompt6Field;
    
        private TPromptField prompt7Field;
    
        private TPromptField prompt8Field;
    
        private TWEBFavotiteAddress[] favoriteAddressesField;
    
        private TException[] exceptionsField;
    
        private TVehicleTypeItem[] vehicleTypesField;
    
        private bool webReservationField;
    
        /// <remarks/>
        public int OwnerID {
            get {
                return this.ownerIDField;
            }
            set {
                this.ownerIDField = value;
            }
        }
    
        /// <remarks/>
        public int OwnerType {
            get {
                return this.ownerTypeField;
            }
            set {
                this.ownerTypeField = value;
            }
        }
    
        /// <remarks/>
        public bool TextBack {
            get {
                return this.textBackField;
            }
            set {
                this.textBackField = value;
            }
        }
    
        /// <remarks/>
        public bool EmailBack {
            get {
                return this.emailBackField;
            }
            set {
                this.emailBackField = value;
            }
        }
    
        /// <remarks/>
        public bool CallBack {
            get {
                return this.callBackField;
            }
            set {
                this.callBackField = value;
            }
        }
    
        /// <remarks/>
        public bool AccountAdmin {
            get {
                return this.accountAdminField;
            }
            set {
                this.accountAdminField = value;
            }
        }
    
        /// <remarks/>
        public bool Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
    
        /// <remarks/>
        public string Email2 {
            get {
                return this.email2Field;
            }
            set {
                this.email2Field = value;
            }
        }
    
        /// <remarks/>
        public string MobilePhone {
            get {
                return this.mobilePhoneField;
            }
            set {
                this.mobilePhoneField = value;
            }
        }
    
        /// <remarks/>
        public string BusinessType {
            get {
                return this.businessTypeField;
            }
            set {
                this.businessTypeField = value;
            }
        }
    
        /// <remarks/>
        public string UserPosition {
            get {
                return this.userPositionField;
            }
            set {
                this.userPositionField = value;
            }
        }
    
        /// <remarks/>
        public string TripRemark {
            get {
                return this.tripRemarkField;
            }
            set {
                this.tripRemarkField = value;
            }
        }
    
        /// <remarks/>
        public string AdminNotes {
            get {
                return this.adminNotesField;
            }
            set {
                this.adminNotesField = value;
            }
        }
    
        /// <remarks/>
        public string LPoints {
            get {
                return this.lPointsField;
            }
            set {
                this.lPointsField = value;
            }
        }
    
        /// <remarks/>
        public string BarCode {
            get {
                return this.barCodeField;
            }
            set {
                this.barCodeField = value;
            }
        }
    
        /// <remarks/>
        public string DeptName {
            get {
                return this.deptNameField;
            }
            set {
                this.deptNameField = value;
            }
        }
    
        /// <remarks/>
        public int DriverRating {
            get {
                return this.driverRatingField;
            }
            set {
                this.driverRatingField = value;
            }
        }
    
        /// <remarks/>
        public int CallbackPhone {
            get {
                return this.callbackPhoneField;
            }
            set {
                this.callbackPhoneField = value;
            }
        }
    
        /// <remarks/>
        public int EMailbackAddress {
            get {
                return this.eMailbackAddressField;
            }
            set {
                this.eMailbackAddressField = value;
            }
        }
    
        /// <remarks/>
        public TPromptField Prompt1 {
            get {
                return this.prompt1Field;
            }
            set {
                this.prompt1Field = value;
            }
        }
    
        /// <remarks/>
        public TPromptField Prompt2 {
            get {
                return this.prompt2Field;
            }
            set {
                this.prompt2Field = value;
            }
        }
    
        /// <remarks/>
        public TPromptField Prompt3 {
            get {
                return this.prompt3Field;
            }
            set {
                this.prompt3Field = value;
            }
        }
    
        /// <remarks/>
        public TPromptField Prompt4 {
            get {
                return this.prompt4Field;
            }
            set {
                this.prompt4Field = value;
            }
        }
    
        /// <remarks/>
        public TPromptField Prompt5 {
            get {
                return this.prompt5Field;
            }
            set {
                this.prompt5Field = value;
            }
        }
    
        /// <remarks/>
        public TPromptField Prompt6 {
            get {
                return this.prompt6Field;
            }
            set {
                this.prompt6Field = value;
            }
        }
    
        /// <remarks/>
        public TPromptField Prompt7 {
            get {
                return this.prompt7Field;
            }
            set {
                this.prompt7Field = value;
            }
        }
    
        /// <remarks/>
        public TPromptField Prompt8 {
            get {
                return this.prompt8Field;
            }
            set {
                this.prompt8Field = value;
            }
        }
    
        /// <remarks/>
        public TWEBFavotiteAddress[] FavoriteAddresses {
            get {
                return this.favoriteAddressesField;
            }
            set {
                this.favoriteAddressesField = value;
            }
        }
    
        /// <remarks/>
        public TException[] Exceptions {
            get {
                return this.exceptionsField;
            }
            set {
                this.exceptionsField = value;
            }
        }
    
        /// <remarks/>
        public TVehicleTypeItem[] VehicleTypes {
            get {
                return this.vehicleTypesField;
            }
            set {
                this.vehicleTypesField = value;
            }
        }
    
        /// <remarks/>
        public bool WebReservation {
            get {
                return this.webReservationField;
            }
            set {
                this.webReservationField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [SoapType(Namespace="urn:TypeAccount")]
    public partial class TBookAccount3 : TBookAccount2 {
    
        private string userCustomerIDField;
    
        /// <remarks/>
        public string UserCustomerID {
            get {
                return this.userCustomerIDField;
            }
            set {
                this.userCustomerIDField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SaveAccountCompletedEventHandler(object sender, SaveAccountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class SaveAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
        private object[] results;
    
        internal SaveAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
            this.results = results;
            }
    
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetWEBAccountCompletedEventHandler(object sender, GetWEBAccountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class GetWEBAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
        private object[] results;
    
        internal GetWEBAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
            this.results = results;
            }
    
        /// <remarks/>
        public TBookAccount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TBookAccount)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SaveAccount2CompletedEventHandler(object sender, SaveAccount2CompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class SaveAccount2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
        private object[] results;
    
        internal SaveAccount2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
            this.results = results;
            }
    
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetWEBAccount2CompletedEventHandler(object sender, GetWEBAccount2CompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class GetWEBAccount2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
        private object[] results;
    
        internal GetWEBAccount2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
            this.results = results;
            }
    
        /// <remarks/>
        public TBookAccount2 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TBookAccount2)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void ChangeAccountLoginCompletedEventHandler(object sender, ChangeAccountLoginCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class ChangeAccountLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
        private object[] results;
    
        internal ChangeAccountLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
            this.results = results;
            }
    
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SaveAccount3CompletedEventHandler(object sender, SaveAccount3CompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class SaveAccount3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
        private object[] results;
    
        internal SaveAccount3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
            this.results = results;
            }
    
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetWEBAccount3CompletedEventHandler(object sender, GetWEBAccount3CompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class GetWEBAccount3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
        private object[] results;
    
        internal GetWEBAccount3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
            this.results = results;
            }
    
        /// <remarks/>
        public TBookAccount3 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TBookAccount3)(this.results[0]));
            }
        }
    }
}