<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="OrderStatus_CabDriverETA" xml:space="preserve">
    <value>ETA: {0}</value>
  </data>
  <data name="OrderStatus_CabDriverNumberAssigned" xml:space="preserve">
    <value>Cab {0} is assigned to you</value>
  </data>
  <data name="OrderStatus_wosAddrNotValid" xml:space="preserve">
    <value>The address is not valid</value>
  </data>
  <data name="OrderStatus_wosARRIVED" xml:space="preserve">
    <value>Taxi is at pickup location</value>
  </data>
  <data name="OrderStatus_wosASSIGNED" xml:space="preserve">
    <value>Driver assigned</value>
  </data>
  <data name="OrderStatus_wosCANCELLED" xml:space="preserve">
    <value>Cancelled</value>
  </data>
  <data name="OrderStatus_wosCANCELLED_DONE" xml:space="preserve">
    <value>Cancelled</value>
  </data>
  <data name="OrderStatus_wosDONE" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="OrderStatus_wosLOADED" xml:space="preserve">
    <value>Passengers are in the taxi</value>
  </data>
  <data name="OrderStatus_wosNone" xml:space="preserve">
    <value>Invalid order, please call dispatch center</value>
  </data>
  <data name="OrderStatus_wosNOSHOW" xml:space="preserve">
    <value>No show</value>
  </data>
  <data name="OrderStatus_wosSCHED" xml:space="preserve">
    <value>Scheduled</value>
  </data>
  <data name="OrderStatus_wosWAITING" xml:space="preserve">
    <value>Waiting for driver to be assigned</value>
  </data>
  <data name="PushNotification_wosARRIVED" xml:space="preserve">
    <value>Your Taxi (#{0}) has arrived</value>
  </data>
  <data name="PushNotification_wosASSIGNED" xml:space="preserve">
    <value>Taxi #{0} has been assigned to you</value>
  </data>
  <data name="OrderStatus_wosTIMEOUT" xml:space="preserve">
    <value>Sorry no cars are available due to high demand, please try later.</value>
  </data>
  <data name="PushNotification_wosTIMEOUT" xml:space="preserve">
    <value>Sorry no cars are available due to high demand, please try later.</value>
  </data>
  <data name="PaymentConfirmationToDriver1" xml:space="preserve">
    <value>The passenger has paid</value>
  </data>
  <data name="PaymentConfirmationToDriver4" xml:space="preserve">
    <value>Auth #{0}</value>
  </data>
  <data name="PairingConfirmationToDriver" xml:space="preserve">
    <value>Fare will be paid by the app</value>
  </data>
  <data name="UnpairingConfirmationToDriver" xml:space="preserve">
    <value>WARNING: The client will NOT be charged at the end of the ride</value>
  </data>
  <data name="Email_Subject_AccountConfirmation" xml:space="preserve">
    <value>Welcome to {{ ApplicationName }}</value>
  </data>
  <data name="Email_Subject_BookingConfirmation" xml:space="preserve">
    <value>{{ ApplicationName }} - Booking confirmation</value>
  </data>
  <data name="Email_Subject_PasswordReset" xml:space="preserve">
    <value>{{ ApplicationName }} - Your password has been reset</value>
  </data>
  <data name="Email_Subject_Receipt" xml:space="preserve">
    <value>{{ ApplicationName }} - Receipt</value>
  </data>
  <data name="Email_Body_AccountConfirmationLine1" xml:space="preserve">
    <value>To confirm your email address, please visit this link:</value>
  </data>
  <data name="Email_Body_AccountConfirmationSuccessfulLine1" xml:space="preserve">
    <value>Your email address has been confirmed successfully.</value>
  </data>
  <data name="Email_Body_AccountConfirmationSuccessfulLine2" xml:space="preserve">
    <value>You can now sign into the application.</value>
  </data>
  <data name="Email_Body_AptNumber" xml:space="preserve">
    <value>Apt&amp;nbsp;No.</value>
  </data>
  <data name="Email_Body_AuthorizationNumber" xml:space="preserve">
    <value>Authorization number :</value>
  </data>
  <data name="Email_Body_BookingConfirmation" xml:space="preserve">
    <value>Booking confirmation</value>
  </data>
  <data name="Email_Body_ChargeType" xml:space="preserve">
    <value>Charge&amp;nbsp;Type</value>
  </data>
  <data name="Email_Body_Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Email_Body_Destination" xml:space="preserve">
    <value>Destination</value>
  </data>
  <data name="Email_Body_EmailConfirmationRequired" xml:space="preserve">
    <value>Email confirmation required</value>
  </data>
  <data name="Email_Body_EmailConfirmationSuccessful" xml:space="preserve">
    <value>Email address confirmation successful</value>
  </data>
  <data name="Email_Body_EstimatedFare" xml:space="preserve">
    <value>Estimated&amp;nbsp;Fare</value>
  </data>
  <data name="Email_Body_Fare" xml:space="preserve">
    <value>Fare</value>
  </data>
  <data name="Email_Body_LargeBags" xml:space="preserve">
    <value>Large&amp;nbsp;bags</value>
  </data>
  <data name="Email_Body_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Email_Body_Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="Email_Body_OrderNo" xml:space="preserve">
    <value>Order&amp;nbsp;#</value>
  </data>
  <data name="Email_Body_PaidWith" xml:space="preserve">
    <value>Paid With</value>
  </data>
  <data name="Email_Body_Passengers" xml:space="preserve">
    <value>Passengers</value>
  </data>
  <data name="Email_Body_PasswordReset" xml:space="preserve">
    <value>Password reset</value>
  </data>
  <data name="Email_Body_PasswordResetLine1" xml:space="preserve">
    <value>Your password has been reset.</value>
  </data>
  <data name="Email_Body_PasswordResetLine2" xml:space="preserve">
    <value>New password:</value>
  </data>
  <data name="Email_Body_PaymentInformation" xml:space="preserve">
    <value>Payment Information</value>
  </data>
  <data name="Email_Body_PhoneNumber" xml:space="preserve">
    <value>Phone&amp;nbsp;Number</value>
  </data>
  <data name="Email_Body_PickupLocation" xml:space="preserve">
    <value>Pickup&amp;nbsp;Location</value>
  </data>
  <data name="Email_Body_PickupTime" xml:space="preserve">
    <value>Pickup&amp;nbsp;Time</value>
  </data>
  <data name="Email_Body_PickupTimeValue" xml:space="preserve">
    <value>{{PickupDate}} at {{PickupTime}}</value>
  </data>
  <data name="Email_Body_Receipt" xml:space="preserve">
    <value>Receipt</value>
  </data>
  <data name="Email_Body_RingCode" xml:space="preserve">
    <value>Ring&amp;nbsp;Code</value>
  </data>
  <data name="Email_Body_ThankYou" xml:space="preserve">
    <value>Thank you!</value>
  </data>
  <data name="Email_Body_TheTeam" xml:space="preserve">
    <value>The {{ ApplicationName }} Team</value>
  </data>
  <data name="Email_Body_Tip" xml:space="preserve">
    <value>Tip</value>
  </data>
  <data name="Email_Body_Toll" xml:space="preserve">
    <value>Toll</value>
  </data>
  <data name="Email_Body_TotalAmount" xml:space="preserve">
    <value>Total Amount</value>
  </data>
  <data name="Email_Body_TotalFare" xml:space="preserve">
    <value>Total&amp;nbsp;Fare</value>
  </data>
  <data name="Email_Body_TransactionId" xml:space="preserve">
    <value>Transaction Id :</value>
  </data>
  <data name="Email_Body_TransactionTime" xml:space="preserve">
    <value>Transaction&amp;nbsp;Time</value>
  </data>
  <data name="Email_Body_TransactionTimeValue" xml:space="preserve">
    <value>{{TransactionDate}} at {{TransactionTime}}</value>
  </data>
  <data name="Email_Body_VAT" xml:space="preserve">
    <value>VAT</value>
  </data>
  <data name="Email_Body_Tax" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="Email_Body_VehicleNumber" xml:space="preserve">
    <value>Vehicle #</value>
  </data>
  <data name="Email_Body_VehicleType" xml:space="preserve">
    <value>Vehicle&amp;nbsp;Type</value>
  </data>
  <data name="Email_Body_Driver" xml:space="preserve">
    <value>Driver</value>
  </data>
  <data name="AccountConfirmationSmsBody" xml:space="preserve">
    <value>Your verification code for {0} is {1}</value>
  </data>
  <data name="PushNotification_NearbyTaxi" xml:space="preserve">
    <value>Your vehicle is almost at pickup location</value>
  </data>
  <data name="PushNotification_PaymentReceived" xml:space="preserve">
    <value>Your credit card was successfully charged a total of {0}. This amount includes both fare and tip.</value>
  </data>
  <data name="PushNotification_wosLOADED" xml:space="preserve">
    <value>Please confirm vehicle to pay with card on file.</value>
  </data>
  <data name="PushNotification_OrderPairingSuccessful" xml:space="preserve">
    <value>The ride #{0} will be paid automatically at the end of the trip using your credit card ending with {1} and using your default tip of {2}%</value>
  </data>
  <data name="PushNotification_OrderPairingFailed" xml:space="preserve">
    <value>The ride #{0} could not be automatically paired</value>
  </data>
  <data name="Email_Body_FareBreakDown" xml:space="preserve">
    <value>Fare breakdown</value>
  </data>
  <data name="Email_Body_Route" xml:space="preserve">
    <value>Route</value>
  </data>
  <data name="OrderStatus_wosLOADEDAutoPairing" xml:space="preserve">
    <value>Fare will be paid using the credit card on file</value>
  </data>
  <data name="CardOnFile" xml:space="preserve">
    <value>Card on File</value>
  </data>
  <data name="ChargeAccount" xml:space="preserve">
    <value>Charge Account</value>
  </data>
  <data name="PaymentInCar" xml:space="preserve">
    <value>Payment in Car</value>
  </data>
  <data name="CurrencyPriceFormat" xml:space="preserve">
    <value>{0:c}</value>
  </data>
  <data name="Email_Body_SubTotal" xml:space="preserve">
    <value>Subtotal</value>
  </data>
  <data name="PaymentConfirmationToDriver2" xml:space="preserve">
    <value>Fare: {0}   Tip: {1}</value>
  </data>
  <data name="PaymentConfirmationToDriver3" xml:space="preserve">
    <value>Total: {0}</value>
  </data>
  <data name="EtaMessageToDriver" xml:space="preserve">
    <value>ETA displayed to client is {0} and {1} min</value>
  </data>
  <data name="PaymentBeingProcessedMessageToDriver" xml:space="preserve">
    <value>Payment being processed by the app...</value>
  </data>
  <data name="PaymentFailedToDriver" xml:space="preserve">
    <value>Payment by the app has Failed!</value>
  </data>
  <data name="PaymentItemDescription" xml:space="preserve">
    <value>Order #{0} Original amount: {1}</value>
  </data>
  <data name="CannotCreateOrderInvalidVersion" xml:space="preserve">
    <value>The order cannot be created using this version of the app. Please upgrade the app to book a ride.</value>
  </data>
  <data name="CannotCreateOrder_CreditCardWasDeclined" xml:space="preserve">
    <value>The order cannot be created because your credit card failed the preauthorization check.</value>
  </data>
  <data name="PushNotification_ChangeNetworkCompany" xml:space="preserve">
    <value>Due to high demand, no cars are available right now. Do you want to book with {0} instead?</value>
  </data>
  <data name="OrderStatus_wosWAITINGRoaming" xml:space="preserve">
    <value>Waiting for driver from {0} to be assigned</value>
  </data>
  <data name="Network_CannotCreateOrder" xml:space="preserve">
    <value>There was a problem while trying to book with {0}. Your order will remain active.</value>
  </data>
  <data name="CannotCreateOrderChargeAccountNotSupported" xml:space="preserve">
    <value>This account is not supported by the web site.</value>
  </data>
  <data name="CannotCreateOrder_PromotionMustUseCardOnFile" xml:space="preserve">
    <value>You must select Card On File to use a promotion.</value>
  </data>
  <data name="CannotCreateOrder_PromotionIsNotActive" xml:space="preserve">
    <value>This promotion is not active</value>
  </data>
  <data name="CannotCreateOrder_PromotionHasReachedMaxUsage" xml:space="preserve">
    <value>Maximum number of uses has been reached for this promotion</value>
  </data>
  <data name="CannotCreateOrder_PromotionAppliesToCurrentBookingOnly" xml:space="preserve">
    <value>This promotion does not applies to future booking</value>
  </data>
  <data name="CannotCreateOrder_PromotionAppliesToFutureBookingOnly" xml:space="preserve">
    <value>This promotion applies to future booking only</value>
  </data>
  <data name="CannotCreateOrder_PromotionNotAvailableForThisDayOfTheWeek" xml:space="preserve">
    <value>This promotion is not available for this day of the week</value>
  </data>
  <data name="CannotCreateOrder_PromotionNotStartedYet" xml:space="preserve">
    <value>This promotion has not started yet</value>
  </data>
  <data name="CannotCreateOrder_PromotionHasExpired" xml:space="preserve">
    <value>This promotion has expired</value>
  </data>
  <data name="CannotCreateOrder_PromotionNotAvailableAtThisTime" xml:space="preserve">
    <value>This promotion is not available at this time</value>
  </data>
</root>