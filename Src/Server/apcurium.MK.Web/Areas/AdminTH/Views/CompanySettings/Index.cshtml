@using apcurium.MK.Common.Extensions
@model MK.Common.Configuration.ServerTaxiHailSetting

<h4 class="table-title">Company Settings</h4>
@if (@TempData["Info"] != null)
{
    <div class="alert alert-info" style="margin-top: 10px;">
        @TempData["Info"]
    </div>
}

@using (Html.BeginForm("Update", "CompanySettings", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    var settings = Model.GetType().GetAllProperties().OrderBy(s => s.Key);
    
    foreach (var setting in settings)
    {
        var settingValue = Model.GetNestedPropertyValue(setting.Key);
        var settingType = setting.Value.PropertyType;
        
        <div class="control-group">
            @Html.Label(setting.Key, new { @class = "control-label", @style = "margin-right:200px; white-space:nowrap;" })
            <div class="controls">
                @if (settingType == typeof(bool))
                {
                    var boolValue = Convert.ToBoolean(settingValue);
                    @Html.DropDownList(
                        setting.Key,
                        new[]
                        { 
                            new SelectListItem { Text = "Yes", Value = "true", Selected = boolValue },
                            new SelectListItem { Text = "No", Value = "false", Selected = !boolValue }
                        },
                        new { @class="input-block-level", @style = "width:250px; margin-right:15px" })
                }
                else if (settingType.BaseType == typeof(Enum))
                {
                    var enumListItems = new List<SelectListItem>();
                    
                    var enumValues = Enum.GetValues(settingType);
                    foreach (var enumValue in enumValues)
                    {
                        enumListItems.Add(new SelectListItem
                        {
                            Text = enumValue.ToString(),
                            Value = enumValue.ToString(),
                            Selected = settingValue.ToString() == enumValue.ToString()
                        });
                    }
                    
                    @Html.DropDownList(setting.Key, enumListItems, new { @class = "input-block-level", @style = "width:250px; margin-right:15px" })
                }
                else
                {
                    @Html.TextBox(setting.Key, settingValue, new { @class = "input-block-level", @style = "width:250px; margin-right:15px" })
                }
            </div>
            <div class="validation-group">
                @Html.ValidationMessage(setting.Key)
            </div>
        </div>
    }

    <div class="control-group">
        <button type="submit" class="btn btn-primary span">Save</button>
    </div>
}
