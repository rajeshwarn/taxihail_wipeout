@model CustomerPortal.Web.Areas.Admin.Models.MarketModel

<div class='row'>
    <h2>New Market</h2>

    @if (@ViewBag.Error != null)
    {
        <div class="alert alert-error" style="margin-top: 10px;">@ViewBag.Error</div>
    }

    @using (Html.BeginForm("CreateMarket", "Markets", FormMethod.Post))
    {
        <div class="control-group">
            @Html.LabelFor(x => x.Market, new { @class = "control-label" })
            <div class="controls">
                @Html.TextBoxFor(x => x.Market, new { @class = "input-block-level", @style = "width: 40%" })
                @Html.ValidationMessageFor(x => x.Market)
            </div>
        </div>

        <fieldset>
            <legend>
                @Html.DisplayNameFor(x => x.Region)
            </legend>
            <table>
                <tbody>
                    <tr>
                        <td></td>
                        <td>@Html.LabelFor(x => x.Region.CoordinateStart.Latitude)</td>
                        <td>@Html.LabelFor(x => x.Region.CoordinateStart.Longitude)</td>
                    </tr>
                    <tr class="editor-coordinate-field">
                        <td>@Html.LabelFor(x => x.Region.CoordinateStart)</td>
                        <td>@Html.TextBoxFor(x => x.Region.CoordinateStart.Latitude, new {id = "StartLatitude", placeholder = "Latitude", oninput = "coordinatesChanged()"})</td>
                        <td>@Html.TextBoxFor(x => x.Region.CoordinateStart.Longitude, new {id = "StartLongitude", placeholder = "Longitude", oninput = "coordinatesChanged()"})</td>
                    </tr>
                    <tr class="validation-message">
                        <td></td>
                        <td>@Html.ValidationMessageFor(x => x.Region.CoordinateStart.Latitude, "", new { style = "top: 0"})</td>
                        <td>@Html.ValidationMessageFor(x => x.Region.CoordinateStart.Longitude, "", new { style = "top: 0" })</td>
                    </tr>
                    <tr class="editor-coordinate-field">
                        <td>@Html.LabelFor(x => x.Region.CoordinateEnd)</td>
                        <td>@Html.TextBoxFor(x => x.Region.CoordinateEnd.Latitude, new { id = "EndLatitude", placeholder = "Latitude", oninput = "coordinatesChanged()" })</td>
                        <td>@Html.TextBoxFor(x => x.Region.CoordinateEnd.Longitude, new { id = "EndLongitude", placeholder = "Longitude", oninput = "coordinatesChanged()" })</td>
                    </tr>
                    <tr class="validation-message">
                        <td></td>
                        <td>@Html.ValidationMessageFor(x => x.Region.CoordinateEnd.Latitude, "", new { style = "top: 0" })</td>
                        <td>@Html.ValidationMessageFor(x => x.Region.CoordinateEnd.Longitude, "", new { style = "top: 0" })</td>
                    </tr>
                </tbody>
            </table>
        </fieldset>

        <div class="control-group btn-right-alignment">
            <button type="submit" class="btn btn-primary span">Create</button>
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn span" })
        </div>
    }

    <br />
    <div id="map-canvas" style="height:400px;width: 800px"></div>
</div>

<script type="text/javascript">

    var map;
    var mapRegion;

    function initialize() {
        map = new google.maps.Map(document.getElementById('map-canvas'), {
            zoom: 8,
            center: new google.maps.LatLng(45.514466, -73.846313),
            disableDefaultUI: true
        });
        addOtherMarketRegions();
    }

    google.maps.event.addDomListener(window, 'load', initialize);

    function addOtherMarketRegions() {
        @foreach (var otherMarket in Model.OtherMarkets)
        {
            if (otherMarket.Region != null
                && otherMarket.Region.CoordinateStart != null
                && otherMarket.Region.CoordinateEnd != null
                && otherMarket.Region.CoordinateStart.Latitude != 0
                && otherMarket.Region.CoordinateStart.Longitude != 0
                && otherMarket.Region.CoordinateEnd.Latitude != 0
                && otherMarket.Region.CoordinateEnd.Longitude != 0)
            {
                <text>
                new google.maps.Rectangle({
                    strokeColor: '#00FF00',
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: '#00FF00',
                    fillOpacity: 0.35,
                    map: map,
                    bounds: new google.maps.LatLngBounds(
                       new google.maps.LatLng(@otherMarket.Region.CoordinateStart.Latitude, @otherMarket.Region.CoordinateStart.Longitude),
                       new google.maps.LatLng(@otherMarket.Region.CoordinateEnd.Latitude, @otherMarket.Region.CoordinateEnd.Longitude))
                });

                new MapLabel({
                    text: '@otherMarket.Name',
                    position: new google.maps.LatLng(@otherMarket.Region.CoordinateEnd.Latitude, @otherMarket.Region.CoordinateStart.Longitude),
                    map: map,
                    fontSize: 25,
                    align: 'left',
                    minZoom: 5
                });
                </text>
            }
        }
    }

    function coordinatesChanged() {
        var startLat = $('#StartLatitude').val();
        var startLon = $('#StartLongitude').val();
        var endLat = $('#EndLatitude').val();
        var endLon = $('#EndLongitude').val();

        var bounds = new google.maps.LatLngBounds(
                new google.maps.LatLng(startLat, startLon),
                new google.maps.LatLng(endLat, endLon));

        if (mapRegion) {
            mapRegion.setBounds(bounds);
        } else {
            mapRegion = new google.maps.Rectangle({
                strokeColor: '#FF0000',
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: '#FF0000',
                fillOpacity: 0.35,
                map: map,
                bounds: bounds
            });
        }

        map.fitBounds(bounds);
    }
</script>