@model CustomerPortal.Web.Entities.Network.TaxiHailNetworkSettings

<div id="ul-wrapper">
    @using (Html.BeginForm("Index", "TaxiHailNetworkSettings", FormMethod.Post, new { id = "taxiHailNetworkForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>
                @Html.DisplayNameFor(x => x.Region)
            </legend>
            <div class="editor-coordinate-field">
                @Html.LabelFor(x => x.Region.CoordinateStart)
                @Html.TextBoxFor(x => x.Region.CoordinateStart.Latitude, new { id = "StartLatitude", onkeyup = "CoordinatesChanged()" })
                @Html.TextBoxFor(x => x.Region.CoordinateStart.Longitude, new { id = "StartLongitude", onkeyup = "CoordinatesChanged()" })
            </div>
            <div class="editor-coordinate-field">
                @Html.LabelFor(x => x.Region.CoordinateEnd)
                @Html.TextBoxFor(x => x.Region.CoordinateEnd.Latitude, new { id = "EndLongitude", onkeyup = "CoordinatesChanged()" })
                @Html.TextBoxFor(x => x.Region.CoordinateEnd.Longitude, new { id = "EndLongitude", onkeyup = "CoordinatesChanged()" })
            </div>
        </fieldset>

        <fieldset>
            <legend>
            </legend>
            <div class="editor-field">
                @Html.LabelFor(x => x.IsInNetwork)
                @Html.CheckBoxFor(x => x.IsInNetwork, new { id = "IsInNetworkCheckBox", onchange = "CheckChanged(this)" })
            </div>
        </fieldset>

        @Html.HiddenFor(x => x.CompanyId);
        @Html.HiddenFor(x => x.Id);
        
        <input type="submit" class="btn btn-primary" value="Save" />
    }
</div>

<div id="map-canvas" style="height:200px"></div>

<script type="text/javascript">
    function initialize() {
        var map = new google.maps.Map(document.getElementById('map-canvas'), {
            zoom: 11,
            center: new google.maps.LatLng(45.514466, -73.846313),
            mapTypeId: google.maps.MapTypeId.TERRAIN
        });

    function CoordinatesChanged() {
        var startLat = $("#StartLatitude").val();
        var startLon = $("#StartLongitude").val();
        var endLat = $("#EndLongitude").val();
        var endLon = $("#EndLongitude").val();

        alert("Tomato");
    }

        var rectangle = new google.maps.Rectangle({
            strokeColor: '#FF0000',
            strokeOpacity: 0.8,
            strokeWeight: 2,
            fillColor: '#FF0000',
            fillOpacity: 0.35,
            map: map,
            bounds: new google.maps.LatLngBounds(
              new google.maps.LatLng(45.514466, -73.846313),
              new google.maps.LatLng(45.411296, -73.513314))
        });
    }

    google.maps.event.addDomListener(window, 'load', initialize);

    function CheckChanged(checkbox) {
        if (checkbox.checked && !$('#taxiHailNetworkForm').valid()) {
            $('#IsInNetworkCheckBox').attr('checked', false);
            alert('please enter start and end regions above');
        }
    }
</script>