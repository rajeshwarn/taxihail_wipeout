//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17379
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="IStaticDatabinding", Namespace="http://tempuri.org/")]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(TChargeTypeItem))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(TProviderItem))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(TAirportItem))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(TAirlineItem))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(TExceptionItem))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(TFlatRatePlaceItem))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(TCityItem))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(TVehicleTypeItem))]
public partial class StaticDataservice : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback GetVehicleTypesOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetAccountOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPickupCityListOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetDropoffCityListOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetFlatRatePlaceListOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetFlatRateValueOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetExceptionsOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetSetupIBSOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetAirlinesOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetAirPortsOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetCompanyPhoneLengthOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetProvidersOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetChargeTypesOperationCompleted;
    
    /// <remarks/>
    public StaticDataservice() {
        this.Url = "http://72.38.252.190:6929/XDS_IASPI.DLL/soap/IStaticData";
    }
    
    /// <remarks/>
    public event GetVehicleTypesCompletedEventHandler GetVehicleTypesCompleted;
    
    /// <remarks/>
    public event GetAccountCompletedEventHandler GetAccountCompleted;
    
    /// <remarks/>
    public event GetPickupCityListCompletedEventHandler GetPickupCityListCompleted;
    
    /// <remarks/>
    public event GetDropoffCityListCompletedEventHandler GetDropoffCityListCompleted;
    
    /// <remarks/>
    public event GetFlatRatePlaceListCompletedEventHandler GetFlatRatePlaceListCompleted;
    
    /// <remarks/>
    public event GetFlatRateValueCompletedEventHandler GetFlatRateValueCompleted;
    
    /// <remarks/>
    public event GetExceptionsCompletedEventHandler GetExceptionsCompleted;
    
    /// <remarks/>
    public event GetSetupIBSCompletedEventHandler GetSetupIBSCompleted;
    
    /// <remarks/>
    public event GetAirlinesCompletedEventHandler GetAirlinesCompleted;
    
    /// <remarks/>
    public event GetAirPortsCompletedEventHandler GetAirPortsCompleted;
    
    /// <remarks/>
    public event GetCompanyPhoneLengthCompletedEventHandler GetCompanyPhoneLengthCompleted;
    
    /// <remarks/>
    public event GetProvidersCompletedEventHandler GetProvidersCompleted;
    
    /// <remarks/>
    public event GetChargeTypesCompletedEventHandler GetChargeTypesCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:StaticDataIntf-IStaticData#GetVehicleTypes", RequestNamespace="urn:StaticDataIntf-IStaticData", ResponseNamespace="urn:StaticDataIntf-IStaticData")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public TVehicleTypeItem[] GetVehicleTypes(string Login, string Password, int CompanyID) {
        object[] results = this.Invoke("GetVehicleTypes", new object[] {
                    Login,
                    Password,
                    CompanyID});
        return ((TVehicleTypeItem[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetVehicleTypes(string Login, string Password, int CompanyID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetVehicleTypes", new object[] {
                    Login,
                    Password,
                    CompanyID}, callback, asyncState);
    }
    
    /// <remarks/>
    public TVehicleTypeItem[] EndGetVehicleTypes(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TVehicleTypeItem[])(results[0]));
    }
    
    /// <remarks/>
    public void GetVehicleTypesAsync(string Login, string Password, int CompanyID) {
        this.GetVehicleTypesAsync(Login, Password, CompanyID, null);
    }
    
    /// <remarks/>
    public void GetVehicleTypesAsync(string Login, string Password, int CompanyID, object userState) {
        if ((this.GetVehicleTypesOperationCompleted == null)) {
            this.GetVehicleTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleTypesOperationCompleted);
        }
        this.InvokeAsync("GetVehicleTypes", new object[] {
                    Login,
                    Password,
                    CompanyID}, this.GetVehicleTypesOperationCompleted, userState);
    }
    
    private void OnGetVehicleTypesOperationCompleted(object arg) {
        if ((this.GetVehicleTypesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetVehicleTypesCompleted(this, new GetVehicleTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:StaticDataIntf-IStaticData#GetAccount", RequestNamespace="urn:StaticDataIntf-IStaticData", ResponseNamespace="urn:StaticDataIntf-IStaticData")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public TAccountItem GetAccount(string Login, string Password, int CompanyID, string WebAccountPassword, string WebAccountLoginID) {
        object[] results = this.Invoke("GetAccount", new object[] {
                    Login,
                    Password,
                    CompanyID,
                    WebAccountPassword,
                    WebAccountLoginID});
        return ((TAccountItem)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetAccount(string Login, string Password, int CompanyID, string WebAccountPassword, string WebAccountLoginID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetAccount", new object[] {
                    Login,
                    Password,
                    CompanyID,
                    WebAccountPassword,
                    WebAccountLoginID}, callback, asyncState);
    }
    
    /// <remarks/>
    public TAccountItem EndGetAccount(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TAccountItem)(results[0]));
    }
    
    /// <remarks/>
    public void GetAccountAsync(string Login, string Password, int CompanyID, string WebAccountPassword, string WebAccountLoginID) {
        this.GetAccountAsync(Login, Password, CompanyID, WebAccountPassword, WebAccountLoginID, null);
    }
    
    /// <remarks/>
    public void GetAccountAsync(string Login, string Password, int CompanyID, string WebAccountPassword, string WebAccountLoginID, object userState) {
        if ((this.GetAccountOperationCompleted == null)) {
            this.GetAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountOperationCompleted);
        }
        this.InvokeAsync("GetAccount", new object[] {
                    Login,
                    Password,
                    CompanyID,
                    WebAccountPassword,
                    WebAccountLoginID}, this.GetAccountOperationCompleted, userState);
    }
    
    private void OnGetAccountOperationCompleted(object arg) {
        if ((this.GetAccountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAccountCompleted(this, new GetAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:StaticDataIntf-IStaticData#GetPickupCityList", RequestNamespace="urn:StaticDataIntf-IStaticData", ResponseNamespace="urn:StaticDataIntf-IStaticData")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public TCityItem[] GetPickupCityList(string Login, string Password, int CompanyID) {
        object[] results = this.Invoke("GetPickupCityList", new object[] {
                    Login,
                    Password,
                    CompanyID});
        return ((TCityItem[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPickupCityList(string Login, string Password, int CompanyID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPickupCityList", new object[] {
                    Login,
                    Password,
                    CompanyID}, callback, asyncState);
    }
    
    /// <remarks/>
    public TCityItem[] EndGetPickupCityList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TCityItem[])(results[0]));
    }
    
    /// <remarks/>
    public void GetPickupCityListAsync(string Login, string Password, int CompanyID) {
        this.GetPickupCityListAsync(Login, Password, CompanyID, null);
    }
    
    /// <remarks/>
    public void GetPickupCityListAsync(string Login, string Password, int CompanyID, object userState) {
        if ((this.GetPickupCityListOperationCompleted == null)) {
            this.GetPickupCityListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPickupCityListOperationCompleted);
        }
        this.InvokeAsync("GetPickupCityList", new object[] {
                    Login,
                    Password,
                    CompanyID}, this.GetPickupCityListOperationCompleted, userState);
    }
    
    private void OnGetPickupCityListOperationCompleted(object arg) {
        if ((this.GetPickupCityListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPickupCityListCompleted(this, new GetPickupCityListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:StaticDataIntf-IStaticData#GetDropoffCityList", RequestNamespace="urn:StaticDataIntf-IStaticData", ResponseNamespace="urn:StaticDataIntf-IStaticData")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public TCityItem[] GetDropoffCityList(string Login, string Password, int CompanyID) {
        object[] results = this.Invoke("GetDropoffCityList", new object[] {
                    Login,
                    Password,
                    CompanyID});
        return ((TCityItem[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetDropoffCityList(string Login, string Password, int CompanyID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetDropoffCityList", new object[] {
                    Login,
                    Password,
                    CompanyID}, callback, asyncState);
    }
    
    /// <remarks/>
    public TCityItem[] EndGetDropoffCityList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TCityItem[])(results[0]));
    }
    
    /// <remarks/>
    public void GetDropoffCityListAsync(string Login, string Password, int CompanyID) {
        this.GetDropoffCityListAsync(Login, Password, CompanyID, null);
    }
    
    /// <remarks/>
    public void GetDropoffCityListAsync(string Login, string Password, int CompanyID, object userState) {
        if ((this.GetDropoffCityListOperationCompleted == null)) {
            this.GetDropoffCityListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDropoffCityListOperationCompleted);
        }
        this.InvokeAsync("GetDropoffCityList", new object[] {
                    Login,
                    Password,
                    CompanyID}, this.GetDropoffCityListOperationCompleted, userState);
    }
    
    private void OnGetDropoffCityListOperationCompleted(object arg) {
        if ((this.GetDropoffCityListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetDropoffCityListCompleted(this, new GetDropoffCityListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:StaticDataIntf-IStaticData#GetFlatRatePlaceList", RequestNamespace="urn:StaticDataIntf-IStaticData", ResponseNamespace="urn:StaticDataIntf-IStaticData")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public TFlatRatePlaceItem[] GetFlatRatePlaceList(string Login, string Password, int CompanyID) {
        object[] results = this.Invoke("GetFlatRatePlaceList", new object[] {
                    Login,
                    Password,
                    CompanyID});
        return ((TFlatRatePlaceItem[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetFlatRatePlaceList(string Login, string Password, int CompanyID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetFlatRatePlaceList", new object[] {
                    Login,
                    Password,
                    CompanyID}, callback, asyncState);
    }
    
    /// <remarks/>
    public TFlatRatePlaceItem[] EndGetFlatRatePlaceList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TFlatRatePlaceItem[])(results[0]));
    }
    
    /// <remarks/>
    public void GetFlatRatePlaceListAsync(string Login, string Password, int CompanyID) {
        this.GetFlatRatePlaceListAsync(Login, Password, CompanyID, null);
    }
    
    /// <remarks/>
    public void GetFlatRatePlaceListAsync(string Login, string Password, int CompanyID, object userState) {
        if ((this.GetFlatRatePlaceListOperationCompleted == null)) {
            this.GetFlatRatePlaceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFlatRatePlaceListOperationCompleted);
        }
        this.InvokeAsync("GetFlatRatePlaceList", new object[] {
                    Login,
                    Password,
                    CompanyID}, this.GetFlatRatePlaceListOperationCompleted, userState);
    }
    
    private void OnGetFlatRatePlaceListOperationCompleted(object arg) {
        if ((this.GetFlatRatePlaceListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetFlatRatePlaceListCompleted(this, new GetFlatRatePlaceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:StaticDataIntf-IStaticData#GetFlatRateValue", RequestNamespace="urn:StaticDataIntf-IStaticData", ResponseNamespace="urn:StaticDataIntf-IStaticData")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public TFlatRateValue GetFlatRateValue(string Login, string Password, int CompanyID, int VehicleTypeID, int AccountID, int FrPlaceIndex, int ToPlaceIndex) {
        object[] results = this.Invoke("GetFlatRateValue", new object[] {
                    Login,
                    Password,
                    CompanyID,
                    VehicleTypeID,
                    AccountID,
                    FrPlaceIndex,
                    ToPlaceIndex});
        return ((TFlatRateValue)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetFlatRateValue(string Login, string Password, int CompanyID, int VehicleTypeID, int AccountID, int FrPlaceIndex, int ToPlaceIndex, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetFlatRateValue", new object[] {
                    Login,
                    Password,
                    CompanyID,
                    VehicleTypeID,
                    AccountID,
                    FrPlaceIndex,
                    ToPlaceIndex}, callback, asyncState);
    }
    
    /// <remarks/>
    public TFlatRateValue EndGetFlatRateValue(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TFlatRateValue)(results[0]));
    }
    
    /// <remarks/>
    public void GetFlatRateValueAsync(string Login, string Password, int CompanyID, int VehicleTypeID, int AccountID, int FrPlaceIndex, int ToPlaceIndex) {
        this.GetFlatRateValueAsync(Login, Password, CompanyID, VehicleTypeID, AccountID, FrPlaceIndex, ToPlaceIndex, null);
    }
    
    /// <remarks/>
    public void GetFlatRateValueAsync(string Login, string Password, int CompanyID, int VehicleTypeID, int AccountID, int FrPlaceIndex, int ToPlaceIndex, object userState) {
        if ((this.GetFlatRateValueOperationCompleted == null)) {
            this.GetFlatRateValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFlatRateValueOperationCompleted);
        }
        this.InvokeAsync("GetFlatRateValue", new object[] {
                    Login,
                    Password,
                    CompanyID,
                    VehicleTypeID,
                    AccountID,
                    FrPlaceIndex,
                    ToPlaceIndex}, this.GetFlatRateValueOperationCompleted, userState);
    }
    
    private void OnGetFlatRateValueOperationCompleted(object arg) {
        if ((this.GetFlatRateValueCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetFlatRateValueCompleted(this, new GetFlatRateValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:StaticDataIntf-IStaticData#GetExceptions", RequestNamespace="urn:StaticDataIntf-IStaticData", ResponseNamespace="urn:StaticDataIntf-IStaticData")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public TExceptionItem[] GetExceptions(string Login, string Password, int CompanyID) {
        object[] results = this.Invoke("GetExceptions", new object[] {
                    Login,
                    Password,
                    CompanyID});
        return ((TExceptionItem[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetExceptions(string Login, string Password, int CompanyID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetExceptions", new object[] {
                    Login,
                    Password,
                    CompanyID}, callback, asyncState);
    }
    
    /// <remarks/>
    public TExceptionItem[] EndGetExceptions(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TExceptionItem[])(results[0]));
    }
    
    /// <remarks/>
    public void GetExceptionsAsync(string Login, string Password, int CompanyID) {
        this.GetExceptionsAsync(Login, Password, CompanyID, null);
    }
    
    /// <remarks/>
    public void GetExceptionsAsync(string Login, string Password, int CompanyID, object userState) {
        if ((this.GetExceptionsOperationCompleted == null)) {
            this.GetExceptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExceptionsOperationCompleted);
        }
        this.InvokeAsync("GetExceptions", new object[] {
                    Login,
                    Password,
                    CompanyID}, this.GetExceptionsOperationCompleted, userState);
    }
    
    private void OnGetExceptionsOperationCompleted(object arg) {
        if ((this.GetExceptionsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetExceptionsCompleted(this, new GetExceptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:StaticDataIntf-IStaticData#GetSetupIBS", RequestNamespace="urn:StaticDataIntf-IStaticData", ResponseNamespace="urn:StaticDataIntf-IStaticData")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public TSetupIBS GetSetupIBS(string Login, string Password, int CompanyID) {
        object[] results = this.Invoke("GetSetupIBS", new object[] {
                    Login,
                    Password,
                    CompanyID});
        return ((TSetupIBS)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetSetupIBS(string Login, string Password, int CompanyID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetSetupIBS", new object[] {
                    Login,
                    Password,
                    CompanyID}, callback, asyncState);
    }
    
    /// <remarks/>
    public TSetupIBS EndGetSetupIBS(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TSetupIBS)(results[0]));
    }
    
    /// <remarks/>
    public void GetSetupIBSAsync(string Login, string Password, int CompanyID) {
        this.GetSetupIBSAsync(Login, Password, CompanyID, null);
    }
    
    /// <remarks/>
    public void GetSetupIBSAsync(string Login, string Password, int CompanyID, object userState) {
        if ((this.GetSetupIBSOperationCompleted == null)) {
            this.GetSetupIBSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSetupIBSOperationCompleted);
        }
        this.InvokeAsync("GetSetupIBS", new object[] {
                    Login,
                    Password,
                    CompanyID}, this.GetSetupIBSOperationCompleted, userState);
    }
    
    private void OnGetSetupIBSOperationCompleted(object arg) {
        if ((this.GetSetupIBSCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetSetupIBSCompleted(this, new GetSetupIBSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:StaticDataIntf-IStaticData#GetAirlines", RequestNamespace="urn:StaticDataIntf-IStaticData", ResponseNamespace="urn:StaticDataIntf-IStaticData")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public TAirlineItem[] GetAirlines(string Login, string Password, int CompanyID) {
        object[] results = this.Invoke("GetAirlines", new object[] {
                    Login,
                    Password,
                    CompanyID});
        return ((TAirlineItem[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetAirlines(string Login, string Password, int CompanyID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetAirlines", new object[] {
                    Login,
                    Password,
                    CompanyID}, callback, asyncState);
    }
    
    /// <remarks/>
    public TAirlineItem[] EndGetAirlines(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TAirlineItem[])(results[0]));
    }
    
    /// <remarks/>
    public void GetAirlinesAsync(string Login, string Password, int CompanyID) {
        this.GetAirlinesAsync(Login, Password, CompanyID, null);
    }
    
    /// <remarks/>
    public void GetAirlinesAsync(string Login, string Password, int CompanyID, object userState) {
        if ((this.GetAirlinesOperationCompleted == null)) {
            this.GetAirlinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAirlinesOperationCompleted);
        }
        this.InvokeAsync("GetAirlines", new object[] {
                    Login,
                    Password,
                    CompanyID}, this.GetAirlinesOperationCompleted, userState);
    }
    
    private void OnGetAirlinesOperationCompleted(object arg) {
        if ((this.GetAirlinesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAirlinesCompleted(this, new GetAirlinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:StaticDataIntf-IStaticData#GetAirPorts", RequestNamespace="urn:StaticDataIntf-IStaticData", ResponseNamespace="urn:StaticDataIntf-IStaticData")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public TAirportItem[] GetAirPorts(string Login, string Password, int CompanyID) {
        object[] results = this.Invoke("GetAirPorts", new object[] {
                    Login,
                    Password,
                    CompanyID});
        return ((TAirportItem[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetAirPorts(string Login, string Password, int CompanyID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetAirPorts", new object[] {
                    Login,
                    Password,
                    CompanyID}, callback, asyncState);
    }
    
    /// <remarks/>
    public TAirportItem[] EndGetAirPorts(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TAirportItem[])(results[0]));
    }
    
    /// <remarks/>
    public void GetAirPortsAsync(string Login, string Password, int CompanyID) {
        this.GetAirPortsAsync(Login, Password, CompanyID, null);
    }
    
    /// <remarks/>
    public void GetAirPortsAsync(string Login, string Password, int CompanyID, object userState) {
        if ((this.GetAirPortsOperationCompleted == null)) {
            this.GetAirPortsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAirPortsOperationCompleted);
        }
        this.InvokeAsync("GetAirPorts", new object[] {
                    Login,
                    Password,
                    CompanyID}, this.GetAirPortsOperationCompleted, userState);
    }
    
    private void OnGetAirPortsOperationCompleted(object arg) {
        if ((this.GetAirPortsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAirPortsCompleted(this, new GetAirPortsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:StaticDataIntf-IStaticData#GetCompanyPhoneLength", RequestNamespace="urn:StaticDataIntf-IStaticData", ResponseNamespace="urn:StaticDataIntf-IStaticData")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public int GetCompanyPhoneLength(string Login, string Password, int CompanyID) {
        object[] results = this.Invoke("GetCompanyPhoneLength", new object[] {
                    Login,
                    Password,
                    CompanyID});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetCompanyPhoneLength(string Login, string Password, int CompanyID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetCompanyPhoneLength", new object[] {
                    Login,
                    Password,
                    CompanyID}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndGetCompanyPhoneLength(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void GetCompanyPhoneLengthAsync(string Login, string Password, int CompanyID) {
        this.GetCompanyPhoneLengthAsync(Login, Password, CompanyID, null);
    }
    
    /// <remarks/>
    public void GetCompanyPhoneLengthAsync(string Login, string Password, int CompanyID, object userState) {
        if ((this.GetCompanyPhoneLengthOperationCompleted == null)) {
            this.GetCompanyPhoneLengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyPhoneLengthOperationCompleted);
        }
        this.InvokeAsync("GetCompanyPhoneLength", new object[] {
                    Login,
                    Password,
                    CompanyID}, this.GetCompanyPhoneLengthOperationCompleted, userState);
    }
    
    private void OnGetCompanyPhoneLengthOperationCompleted(object arg) {
        if ((this.GetCompanyPhoneLengthCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetCompanyPhoneLengthCompleted(this, new GetCompanyPhoneLengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:StaticDataIntf-IStaticData#GetProviders", RequestNamespace="urn:StaticDataIntf-IStaticData", ResponseNamespace="urn:StaticDataIntf-IStaticData")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public TProviderItem[] GetProviders(string Login, string Password) {
        object[] results = this.Invoke("GetProviders", new object[] {
                    Login,
                    Password});
        return ((TProviderItem[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetProviders(string Login, string Password, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetProviders", new object[] {
                    Login,
                    Password}, callback, asyncState);
    }
    
    /// <remarks/>
    public TProviderItem[] EndGetProviders(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TProviderItem[])(results[0]));
    }
    
    /// <remarks/>
    public void GetProvidersAsync(string Login, string Password) {
        this.GetProvidersAsync(Login, Password, null);
    }
    
    /// <remarks/>
    public void GetProvidersAsync(string Login, string Password, object userState) {
        if ((this.GetProvidersOperationCompleted == null)) {
            this.GetProvidersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProvidersOperationCompleted);
        }
        this.InvokeAsync("GetProviders", new object[] {
                    Login,
                    Password}, this.GetProvidersOperationCompleted, userState);
    }
    
    private void OnGetProvidersOperationCompleted(object arg) {
        if ((this.GetProvidersCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetProvidersCompleted(this, new GetProvidersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:StaticDataIntf-IStaticData#GetChargeTypes", RequestNamespace="urn:StaticDataIntf-IStaticData", ResponseNamespace="urn:StaticDataIntf-IStaticData")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public TChargeTypeItem[] GetChargeTypes(string Login, string Password, int CompanyID) {
        object[] results = this.Invoke("GetChargeTypes", new object[] {
                    Login,
                    Password,
                    CompanyID});
        return ((TChargeTypeItem[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetChargeTypes(string Login, string Password, int CompanyID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetChargeTypes", new object[] {
                    Login,
                    Password,
                    CompanyID}, callback, asyncState);
    }
    
    /// <remarks/>
    public TChargeTypeItem[] EndGetChargeTypes(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TChargeTypeItem[])(results[0]));
    }
    
    /// <remarks/>
    public void GetChargeTypesAsync(string Login, string Password, int CompanyID) {
        this.GetChargeTypesAsync(Login, Password, CompanyID, null);
    }
    
    /// <remarks/>
    public void GetChargeTypesAsync(string Login, string Password, int CompanyID, object userState) {
        if ((this.GetChargeTypesOperationCompleted == null)) {
            this.GetChargeTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChargeTypesOperationCompleted);
        }
        this.InvokeAsync("GetChargeTypes", new object[] {
                    Login,
                    Password,
                    CompanyID}, this.GetChargeTypesOperationCompleted, userState);
    }
    
    private void OnGetChargeTypesOperationCompleted(object arg) {
        if ((this.GetChargeTypesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetChargeTypesCompleted(this, new GetChargeTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:StaticDataIntf")]
public partial class TVehicleTypeItem {
    
    private string nameField;
    
    private int capacityField;
    
    private int idField;
    
    private bool isDefaultField;
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public int Capacity {
        get {
            return this.capacityField;
        }
        set {
            this.capacityField = value;
        }
    }
    
    /// <remarks/>
    public int ID {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    public bool isDefault {
        get {
            return this.isDefaultField;
        }
        set {
            this.isDefaultField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:StaticDataIntf")]
public partial class TChargeTypeItem {
    
    private int chargeTypeIDField;
    
    private string chargeTypeNameField;
    
    /// <remarks/>
    public int ChargeTypeID {
        get {
            return this.chargeTypeIDField;
        }
        set {
            this.chargeTypeIDField = value;
        }
    }
    
    /// <remarks/>
    public string ChargeTypeName {
        get {
            return this.chargeTypeNameField;
        }
        set {
            this.chargeTypeNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:StaticDataIntf")]
public partial class TProviderItem {
    
    private string providerNameField;
    
    private string providerIDField;
    
    private int providerNumField;
    
    private bool isDefaultField;
    
    /// <remarks/>
    public string ProviderName {
        get {
            return this.providerNameField;
        }
        set {
            this.providerNameField = value;
        }
    }
    
    /// <remarks/>
    public string ProviderID {
        get {
            return this.providerIDField;
        }
        set {
            this.providerIDField = value;
        }
    }
    
    /// <remarks/>
    public int ProviderNum {
        get {
            return this.providerNumField;
        }
        set {
            this.providerNumField = value;
        }
    }
    
    /// <remarks/>
    public bool isDefault {
        get {
            return this.isDefaultField;
        }
        set {
            this.isDefaultField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:StaticDataIntf")]
public partial class TAirportItem {
    
    private string airportAddressField;
    
    private string cityField;
    
    private string regionField;
    
    private string airportCodeField;
    
    private double lonField;
    
    private double latField;
    
    /// <remarks/>
    public string AirportAddress {
        get {
            return this.airportAddressField;
        }
        set {
            this.airportAddressField = value;
        }
    }
    
    /// <remarks/>
    public string City {
        get {
            return this.cityField;
        }
        set {
            this.cityField = value;
        }
    }
    
    /// <remarks/>
    public string Region {
        get {
            return this.regionField;
        }
        set {
            this.regionField = value;
        }
    }
    
    /// <remarks/>
    public string AirportCode {
        get {
            return this.airportCodeField;
        }
        set {
            this.airportCodeField = value;
        }
    }
    
    /// <remarks/>
    public double Lon {
        get {
            return this.lonField;
        }
        set {
            this.lonField = value;
        }
    }
    
    /// <remarks/>
    public double Lat {
        get {
            return this.latField;
        }
        set {
            this.latField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:StaticDataIntf")]
public partial class TAirlineItem {
    
    private string airIDField;
    
    private string airNameField;
    
    /// <remarks/>
    public string AirID {
        get {
            return this.airIDField;
        }
        set {
            this.airIDField = value;
        }
    }
    
    /// <remarks/>
    public string AirName {
        get {
            return this.airNameField;
        }
        set {
            this.airNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:StaticDataIntf")]
public partial class TSetupIBS {
    
    private int setup_IBS_IDField;
    
    private int companyIDField;
    
    private int reservationLeadMinField;
    
    private int cancellationLeadMinField;
    
    private int maxPassengersPerOrderField;
    
    private int cCTimeoutMinField;
    
    private int minLenLoginIDField;
    
    private int minLenPassField;
    
    private string invoicePATHField;
    
    private string reportPATHField;
    
    private int reportDaysField;
    
    private string reportTypeField;
    
    private bool createAccountWebField;
    
    private bool editAccountWebField;
    
    private bool oneTimeWebBookingField;
    
    private bool cancelTripWebField;
    
    private bool editTripWebField;
    
    private bool useAccountPromptsWebField;
    
    private bool tripHistoryField;
    
    private bool mappingField;
    
    private bool displayQuoteField;
    
    private bool eMailFlagsField;
    
    private bool txtBackFlagsField;
    
    private bool callOutFlagsField;
    
    private bool multiCarField;
    
    private int maxCarsPerOrderField;
    
    /// <remarks/>
    public int Setup_IBS_ID {
        get {
            return this.setup_IBS_IDField;
        }
        set {
            this.setup_IBS_IDField = value;
        }
    }
    
    /// <remarks/>
    public int CompanyID {
        get {
            return this.companyIDField;
        }
        set {
            this.companyIDField = value;
        }
    }
    
    /// <remarks/>
    public int ReservationLeadMin {
        get {
            return this.reservationLeadMinField;
        }
        set {
            this.reservationLeadMinField = value;
        }
    }
    
    /// <remarks/>
    public int CancellationLeadMin {
        get {
            return this.cancellationLeadMinField;
        }
        set {
            this.cancellationLeadMinField = value;
        }
    }
    
    /// <remarks/>
    public int MaxPassengersPerOrder {
        get {
            return this.maxPassengersPerOrderField;
        }
        set {
            this.maxPassengersPerOrderField = value;
        }
    }
    
    /// <remarks/>
    public int CCTimeoutMin {
        get {
            return this.cCTimeoutMinField;
        }
        set {
            this.cCTimeoutMinField = value;
        }
    }
    
    /// <remarks/>
    public int MinLenLoginID {
        get {
            return this.minLenLoginIDField;
        }
        set {
            this.minLenLoginIDField = value;
        }
    }
    
    /// <remarks/>
    public int MinLenPass {
        get {
            return this.minLenPassField;
        }
        set {
            this.minLenPassField = value;
        }
    }
    
    /// <remarks/>
    public string InvoicePATH {
        get {
            return this.invoicePATHField;
        }
        set {
            this.invoicePATHField = value;
        }
    }
    
    /// <remarks/>
    public string ReportPATH {
        get {
            return this.reportPATHField;
        }
        set {
            this.reportPATHField = value;
        }
    }
    
    /// <remarks/>
    public int ReportDays {
        get {
            return this.reportDaysField;
        }
        set {
            this.reportDaysField = value;
        }
    }
    
    /// <remarks/>
    public string ReportType {
        get {
            return this.reportTypeField;
        }
        set {
            this.reportTypeField = value;
        }
    }
    
    /// <remarks/>
    public bool CreateAccountWeb {
        get {
            return this.createAccountWebField;
        }
        set {
            this.createAccountWebField = value;
        }
    }
    
    /// <remarks/>
    public bool EditAccountWeb {
        get {
            return this.editAccountWebField;
        }
        set {
            this.editAccountWebField = value;
        }
    }
    
    /// <remarks/>
    public bool OneTimeWebBooking {
        get {
            return this.oneTimeWebBookingField;
        }
        set {
            this.oneTimeWebBookingField = value;
        }
    }
    
    /// <remarks/>
    public bool CancelTripWeb {
        get {
            return this.cancelTripWebField;
        }
        set {
            this.cancelTripWebField = value;
        }
    }
    
    /// <remarks/>
    public bool EditTripWeb {
        get {
            return this.editTripWebField;
        }
        set {
            this.editTripWebField = value;
        }
    }
    
    /// <remarks/>
    public bool UseAccountPromptsWeb {
        get {
            return this.useAccountPromptsWebField;
        }
        set {
            this.useAccountPromptsWebField = value;
        }
    }
    
    /// <remarks/>
    public bool TripHistory {
        get {
            return this.tripHistoryField;
        }
        set {
            this.tripHistoryField = value;
        }
    }
    
    /// <remarks/>
    public bool Mapping {
        get {
            return this.mappingField;
        }
        set {
            this.mappingField = value;
        }
    }
    
    /// <remarks/>
    public bool DisplayQuote {
        get {
            return this.displayQuoteField;
        }
        set {
            this.displayQuoteField = value;
        }
    }
    
    /// <remarks/>
    public bool EMailFlags {
        get {
            return this.eMailFlagsField;
        }
        set {
            this.eMailFlagsField = value;
        }
    }
    
    /// <remarks/>
    public bool TxtBackFlags {
        get {
            return this.txtBackFlagsField;
        }
        set {
            this.txtBackFlagsField = value;
        }
    }
    
    /// <remarks/>
    public bool CallOutFlags {
        get {
            return this.callOutFlagsField;
        }
        set {
            this.callOutFlagsField = value;
        }
    }
    
    /// <remarks/>
    public bool MultiCar {
        get {
            return this.multiCarField;
        }
        set {
            this.multiCarField = value;
        }
    }
    
    /// <remarks/>
    public int MaxCarsPerOrder {
        get {
            return this.maxCarsPerOrderField;
        }
        set {
            this.maxCarsPerOrderField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:StaticDataIntf")]
public partial class TExceptionItem {
    
    private int idField;
    
    private string nameField;
    
    /// <remarks/>
    public int ID {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:StaticDataIntf")]
public partial class TFlatRateValue {
    
    private int idField;
    
    private double priceField;
    
    private double tollsField;
    
    /// <remarks/>
    public int ID {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    public double Price {
        get {
            return this.priceField;
        }
        set {
            this.priceField = value;
        }
    }
    
    /// <remarks/>
    public double Tolls {
        get {
            return this.tollsField;
        }
        set {
            this.tollsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:StaticDataIntf")]
public partial class TFlatRatePlaceItem {
    
    private int indexField;
    
    private string nameField;
    
    /// <remarks/>
    public int Index {
        get {
            return this.indexField;
        }
        set {
            this.indexField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:StaticDataIntf")]
public partial class TCityItem {
    
    private int cityIDField;
    
    private string nameField;
    
    /// <remarks/>
    public int CityID {
        get {
            return this.cityIDField;
        }
        set {
            this.cityIDField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:StaticDataIntf")]
public partial class TAccountItem {
    
    private int accountIDField;
    
    private string nameField;
    
    private string accountLoginField;
    
    private string accountPasswordField;
    
    private bool webReservationField;
    
    /// <remarks/>
    public int AccountID {
        get {
            return this.accountIDField;
        }
        set {
            this.accountIDField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public string AccountLogin {
        get {
            return this.accountLoginField;
        }
        set {
            this.accountLoginField = value;
        }
    }
    
    /// <remarks/>
    public string AccountPassword {
        get {
            return this.accountPasswordField;
        }
        set {
            this.accountPasswordField = value;
        }
    }
    
    /// <remarks/>
    public bool WebReservation {
        get {
            return this.webReservationField;
        }
        set {
            this.webReservationField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetVehicleTypesCompletedEventHandler(object sender, GetVehicleTypesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetVehicleTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetVehicleTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TVehicleTypeItem[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TVehicleTypeItem[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetAccountCompletedEventHandler(object sender, GetAccountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TAccountItem Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TAccountItem)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetPickupCityListCompletedEventHandler(object sender, GetPickupCityListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPickupCityListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPickupCityListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TCityItem[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TCityItem[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetDropoffCityListCompletedEventHandler(object sender, GetDropoffCityListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetDropoffCityListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetDropoffCityListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TCityItem[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TCityItem[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetFlatRatePlaceListCompletedEventHandler(object sender, GetFlatRatePlaceListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetFlatRatePlaceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetFlatRatePlaceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TFlatRatePlaceItem[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TFlatRatePlaceItem[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetFlatRateValueCompletedEventHandler(object sender, GetFlatRateValueCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetFlatRateValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetFlatRateValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TFlatRateValue Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TFlatRateValue)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetExceptionsCompletedEventHandler(object sender, GetExceptionsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetExceptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetExceptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TExceptionItem[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TExceptionItem[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetSetupIBSCompletedEventHandler(object sender, GetSetupIBSCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetSetupIBSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetSetupIBSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TSetupIBS Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TSetupIBS)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetAirlinesCompletedEventHandler(object sender, GetAirlinesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAirlinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetAirlinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TAirlineItem[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TAirlineItem[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetAirPortsCompletedEventHandler(object sender, GetAirPortsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAirPortsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetAirPortsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TAirportItem[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TAirportItem[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetCompanyPhoneLengthCompletedEventHandler(object sender, GetCompanyPhoneLengthCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetCompanyPhoneLengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetCompanyPhoneLengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetProvidersCompletedEventHandler(object sender, GetProvidersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetProvidersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetProvidersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TProviderItem[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TProviderItem[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetChargeTypesCompletedEventHandler(object sender, GetChargeTypesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetChargeTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetChargeTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TChargeTypeItem[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TChargeTypeItem[])(this.results[0]));
        }
    }
}
