// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace TaxiMobileApp.Lib.IBS {
    
    
    /// <remarks/>
    [System.Web.Services.WebServiceBinding(Name="AccountServiceSoap", Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompaniesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNotesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehiclesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderStatusListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChargeTypesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRideExceptionsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderHistoryExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrdersListOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleLocationOperationCompleted;
        
        public AccountService() {
            this.Url = "http://taxidiamondwebbook.dyndns.org/TaxiMobileWebServiceProd/AccountService.asmx";
        }
        
        public AccountService(string url) {
            this.Url = url;
        }
        
        public event AuthenticateCompletedEventHandler AuthenticateCompleted;
        
        public event GetAccountCompletedEventHandler GetAccountCompleted;
        
        public event CreateAccountCompletedEventHandler CreateAccountCompleted;
        
        public event UpdateAccountCompletedEventHandler UpdateAccountCompleted;
        
        public event ResetPasswordCompletedEventHandler ResetPasswordCompleted;
        
        public event UpdatePasswordCompletedEventHandler UpdatePasswordCompleted;
        
        public event GetCompaniesListCompletedEventHandler GetCompaniesListCompleted;
        
        public event GetNotesListCompletedEventHandler GetNotesListCompleted;
        
        public event GetVehiclesListCompletedEventHandler GetVehiclesListCompleted;
        
        public event GetOrderStatusListCompletedEventHandler GetOrderStatusListCompleted;
        
        public event GetChargeTypesListCompletedEventHandler GetChargeTypesListCompleted;
        
        public event GetRideExceptionsListCompletedEventHandler GetRideExceptionsListCompleted;
        
        public event GetOrderHistoryCompletedEventHandler GetOrderHistoryCompleted;
        
        public event GetOrderHistoryExCompletedEventHandler GetOrderHistoryExCompleted;
        
        public event GetOrdersListCompletedEventHandler GetOrdersListCompleted;
        
        public event CreateOrderCompletedEventHandler CreateOrderCompleted;
        
        public event ChangeOrderCompletedEventHandler ChangeOrderCompleted;
        
        public event CancelOrderCompletedEventHandler CancelOrderCompleted;
        
        public event GetVehicleLocationCompletedEventHandler GetVehicleLocationCompleted;
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/Authenticate", RequestNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ResponseNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public string Authenticate(string user, string password, int minutesTimeOut) {
            object[] results = this.Invoke("Authenticate", new object[] {
                        user,
                        password,
                        minutesTimeOut});
            return ((string)(results[0]));
        }
        
        public System.IAsyncResult BeginAuthenticate(string user, string password, int minutesTimeOut, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Authenticate", new object[] {
                        user,
                        password,
                        minutesTimeOut}, callback, asyncState);
        }
        
        public string EndAuthenticate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        public void AuthenticateAsync(string user, string password, int minutesTimeOut) {
            this.AuthenticateAsync(user, password, minutesTimeOut, null);
        }
        
        public void AuthenticateAsync(string user, string password, int minutesTimeOut, object userState) {
            if ((this.AuthenticateOperationCompleted == null)) {
                this.AuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateCompleted);
            }
            this.InvokeAsync("Authenticate", new object[] {
                        user,
                        password,
                        minutesTimeOut}, this.AuthenticateOperationCompleted, userState);
        }
        
        private void OnAuthenticateCompleted(object arg) {
            if ((this.AuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateCompleted(this, new AuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/GetAccount", RequestNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ResponseNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public AccountCallResult GetAccount(string sessionId, string email, string password) {
            object[] results = this.Invoke("GetAccount", new object[] {
                        sessionId,
                        email,
                        password});
            return ((AccountCallResult)(results[0]));
        }
        
        public System.IAsyncResult BeginGetAccount(string sessionId, string email, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAccount", new object[] {
                        sessionId,
                        email,
                        password}, callback, asyncState);
        }
        
        public AccountCallResult EndGetAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AccountCallResult)(results[0]));
        }
        
        public void GetAccountAsync(string sessionId, string email, string password) {
            this.GetAccountAsync(sessionId, email, password, null);
        }
        
        public void GetAccountAsync(string sessionId, string email, string password, object userState) {
            if ((this.GetAccountOperationCompleted == null)) {
                this.GetAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountCompleted);
            }
            this.InvokeAsync("GetAccount", new object[] {
                        sessionId,
                        email,
                        password}, this.GetAccountOperationCompleted, userState);
        }
        
        private void OnGetAccountCompleted(object arg) {
            if ((this.GetAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountCompleted(this, new GetAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/CreateAccount", RequestNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ResponseNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public AccountCallResult CreateAccount(string sessionId, AccountInfo accountInfo) {
            object[] results = this.Invoke("CreateAccount", new object[] {
                        sessionId,
                        accountInfo});
            return ((AccountCallResult)(results[0]));
        }
        
        public System.IAsyncResult BeginCreateAccount(string sessionId, AccountInfo accountInfo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateAccount", new object[] {
                        sessionId,
                        accountInfo}, callback, asyncState);
        }
        
        public AccountCallResult EndCreateAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AccountCallResult)(results[0]));
        }
        
        public void CreateAccountAsync(string sessionId, AccountInfo accountInfo) {
            this.CreateAccountAsync(sessionId, accountInfo, null);
        }
        
        public void CreateAccountAsync(string sessionId, AccountInfo accountInfo, object userState) {
            if ((this.CreateAccountOperationCompleted == null)) {
                this.CreateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAccountCompleted);
            }
            this.InvokeAsync("CreateAccount", new object[] {
                        sessionId,
                        accountInfo}, this.CreateAccountOperationCompleted, userState);
        }
        
        private void OnCreateAccountCompleted(object arg) {
            if ((this.CreateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAccountCompleted(this, new CreateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/UpdateAccount", RequestNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ResponseNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public AccountCallResult UpdateAccount(string sessionId, AccountInfo accountInfo) {
            object[] results = this.Invoke("UpdateAccount", new object[] {
                        sessionId,
                        accountInfo});
            return ((AccountCallResult)(results[0]));
        }
        
        public System.IAsyncResult BeginUpdateAccount(string sessionId, AccountInfo accountInfo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateAccount", new object[] {
                        sessionId,
                        accountInfo}, callback, asyncState);
        }
        
        public AccountCallResult EndUpdateAccount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AccountCallResult)(results[0]));
        }
        
        public void UpdateAccountAsync(string sessionId, AccountInfo accountInfo) {
            this.UpdateAccountAsync(sessionId, accountInfo, null);
        }
        
        public void UpdateAccountAsync(string sessionId, AccountInfo accountInfo, object userState) {
            if ((this.UpdateAccountOperationCompleted == null)) {
                this.UpdateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountCompleted);
            }
            this.InvokeAsync("UpdateAccount", new object[] {
                        sessionId,
                        accountInfo}, this.UpdateAccountOperationCompleted, userState);
        }
        
        private void OnUpdateAccountCompleted(object arg) {
            if ((this.UpdateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountCompleted(this, new UpdateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/ResetPassword", RequestNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ResponseNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public CallResult ResetPassword(string sessionId, string email) {
            object[] results = this.Invoke("ResetPassword", new object[] {
                        sessionId,
                        email});
            return ((CallResult)(results[0]));
        }
        
        public System.IAsyncResult BeginResetPassword(string sessionId, string email, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ResetPassword", new object[] {
                        sessionId,
                        email}, callback, asyncState);
        }
        
        public CallResult EndResetPassword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CallResult)(results[0]));
        }
        
        public void ResetPasswordAsync(string sessionId, string email) {
            this.ResetPasswordAsync(sessionId, email, null);
        }
        
        public void ResetPasswordAsync(string sessionId, string email, object userState) {
            if ((this.ResetPasswordOperationCompleted == null)) {
                this.ResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPasswordCompleted);
            }
            this.InvokeAsync("ResetPassword", new object[] {
                        sessionId,
                        email}, this.ResetPasswordOperationCompleted, userState);
        }
        
        private void OnResetPasswordCompleted(object arg) {
            if ((this.ResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/UpdatePassword", RequestNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ResponseNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public CallResult UpdatePassword(string sessionId, string email, string oldPassword, string newPassword) {
            object[] results = this.Invoke("UpdatePassword", new object[] {
                        sessionId,
                        email,
                        oldPassword,
                        newPassword});
            return ((CallResult)(results[0]));
        }
        
        public System.IAsyncResult BeginUpdatePassword(string sessionId, string email, string oldPassword, string newPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePassword", new object[] {
                        sessionId,
                        email,
                        oldPassword,
                        newPassword}, callback, asyncState);
        }
        
        public CallResult EndUpdatePassword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CallResult)(results[0]));
        }
        
        public void UpdatePasswordAsync(string sessionId, string email, string oldPassword, string newPassword) {
            this.UpdatePasswordAsync(sessionId, email, oldPassword, newPassword, null);
        }
        
        public void UpdatePasswordAsync(string sessionId, string email, string oldPassword, string newPassword, object userState) {
            if ((this.UpdatePasswordOperationCompleted == null)) {
                this.UpdatePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePasswordCompleted);
            }
            this.InvokeAsync("UpdatePassword", new object[] {
                        sessionId,
                        email,
                        oldPassword,
                        newPassword}, this.UpdatePasswordOperationCompleted, userState);
        }
        
        private void OnUpdatePasswordCompleted(object arg) {
            if ((this.UpdatePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePasswordCompleted(this, new UpdatePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/GetCompaniesList", RequestNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ResponseNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public CompaniesListCallResult GetCompaniesList(string sessionId) {
            object[] results = this.Invoke("GetCompaniesList", new object[] {
                        sessionId});
            return ((CompaniesListCallResult)(results[0]));
        }
        
        public System.IAsyncResult BeginGetCompaniesList(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCompaniesList", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        public CompaniesListCallResult EndGetCompaniesList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CompaniesListCallResult)(results[0]));
        }
        
        public void GetCompaniesListAsync(string sessionId) {
            this.GetCompaniesListAsync(sessionId, null);
        }
        
        public void GetCompaniesListAsync(string sessionId, object userState) {
            if ((this.GetCompaniesListOperationCompleted == null)) {
                this.GetCompaniesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompaniesListCompleted);
            }
            this.InvokeAsync("GetCompaniesList", new object[] {
                        sessionId}, this.GetCompaniesListOperationCompleted, userState);
        }
        
        private void OnGetCompaniesListCompleted(object arg) {
            if ((this.GetCompaniesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompaniesListCompleted(this, new GetCompaniesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/GetNotesList", RequestNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ResponseNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public NotesListCallResult GetNotesList(string sessionId, string language) {
            object[] results = this.Invoke("GetNotesList", new object[] {
                        sessionId,
                        language});
            return ((NotesListCallResult)(results[0]));
        }
        
        public System.IAsyncResult BeginGetNotesList(string sessionId, string language, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNotesList", new object[] {
                        sessionId,
                        language}, callback, asyncState);
        }
        
        public NotesListCallResult EndGetNotesList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((NotesListCallResult)(results[0]));
        }
        
        public void GetNotesListAsync(string sessionId, string language) {
            this.GetNotesListAsync(sessionId, language, null);
        }
        
        public void GetNotesListAsync(string sessionId, string language, object userState) {
            if ((this.GetNotesListOperationCompleted == null)) {
                this.GetNotesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNotesListCompleted);
            }
            this.InvokeAsync("GetNotesList", new object[] {
                        sessionId,
                        language}, this.GetNotesListOperationCompleted, userState);
        }
        
        private void OnGetNotesListCompleted(object arg) {
            if ((this.GetNotesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNotesListCompleted(this, new GetNotesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/GetVehiclesList", RequestNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ResponseNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public VehiclesListCallResult GetVehiclesList(string sessionId) {
            object[] results = this.Invoke("GetVehiclesList", new object[] {
                        sessionId});
            return ((VehiclesListCallResult)(results[0]));
        }
        
        public System.IAsyncResult BeginGetVehiclesList(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetVehiclesList", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        public VehiclesListCallResult EndGetVehiclesList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VehiclesListCallResult)(results[0]));
        }
        
        public void GetVehiclesListAsync(string sessionId) {
            this.GetVehiclesListAsync(sessionId, null);
        }
        
        public void GetVehiclesListAsync(string sessionId, object userState) {
            if ((this.GetVehiclesListOperationCompleted == null)) {
                this.GetVehiclesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehiclesListCompleted);
            }
            this.InvokeAsync("GetVehiclesList", new object[] {
                        sessionId}, this.GetVehiclesListOperationCompleted, userState);
        }
        
        private void OnGetVehiclesListCompleted(object arg) {
            if ((this.GetVehiclesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehiclesListCompleted(this, new GetVehiclesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/GetOrderStatusList", RequestNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ResponseNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public OrderStatusListCallResult GetOrderStatusList(string sessionId, string language) {
            object[] results = this.Invoke("GetOrderStatusList", new object[] {
                        sessionId,
                        language});
            return ((OrderStatusListCallResult)(results[0]));
        }
        
        public System.IAsyncResult BeginGetOrderStatusList(string sessionId, string language, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrderStatusList", new object[] {
                        sessionId,
                        language}, callback, asyncState);
        }
        
        public OrderStatusListCallResult EndGetOrderStatusList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrderStatusListCallResult)(results[0]));
        }
        
        public void GetOrderStatusListAsync(string sessionId, string language) {
            this.GetOrderStatusListAsync(sessionId, language, null);
        }
        
        public void GetOrderStatusListAsync(string sessionId, string language, object userState) {
            if ((this.GetOrderStatusListOperationCompleted == null)) {
                this.GetOrderStatusListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderStatusListCompleted);
            }
            this.InvokeAsync("GetOrderStatusList", new object[] {
                        sessionId,
                        language}, this.GetOrderStatusListOperationCompleted, userState);
        }
        
        private void OnGetOrderStatusListCompleted(object arg) {
            if ((this.GetOrderStatusListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderStatusListCompleted(this, new GetOrderStatusListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/GetChargeTypesList", RequestNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ResponseNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public ChargeTypesListCallResult GetChargeTypesList(string sessionId, string language) {
            object[] results = this.Invoke("GetChargeTypesList", new object[] {
                        sessionId,
                        language});
            return ((ChargeTypesListCallResult)(results[0]));
        }
        
        public System.IAsyncResult BeginGetChargeTypesList(string sessionId, string language, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChargeTypesList", new object[] {
                        sessionId,
                        language}, callback, asyncState);
        }
        
        public ChargeTypesListCallResult EndGetChargeTypesList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ChargeTypesListCallResult)(results[0]));
        }
        
        public void GetChargeTypesListAsync(string sessionId, string language) {
            this.GetChargeTypesListAsync(sessionId, language, null);
        }
        
        public void GetChargeTypesListAsync(string sessionId, string language, object userState) {
            if ((this.GetChargeTypesListOperationCompleted == null)) {
                this.GetChargeTypesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChargeTypesListCompleted);
            }
            this.InvokeAsync("GetChargeTypesList", new object[] {
                        sessionId,
                        language}, this.GetChargeTypesListOperationCompleted, userState);
        }
        
        private void OnGetChargeTypesListCompleted(object arg) {
            if ((this.GetChargeTypesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChargeTypesListCompleted(this, new GetChargeTypesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/GetRideExceptionsList", RequestNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ResponseNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public RideExceptionsListCallResult GetRideExceptionsList(string sessionId, string language) {
            object[] results = this.Invoke("GetRideExceptionsList", new object[] {
                        sessionId,
                        language});
            return ((RideExceptionsListCallResult)(results[0]));
        }
        
        public System.IAsyncResult BeginGetRideExceptionsList(string sessionId, string language, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRideExceptionsList", new object[] {
                        sessionId,
                        language}, callback, asyncState);
        }
        
        public RideExceptionsListCallResult EndGetRideExceptionsList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RideExceptionsListCallResult)(results[0]));
        }
        
        public void GetRideExceptionsListAsync(string sessionId, string language) {
            this.GetRideExceptionsListAsync(sessionId, language, null);
        }
        
        public void GetRideExceptionsListAsync(string sessionId, string language, object userState) {
            if ((this.GetRideExceptionsListOperationCompleted == null)) {
                this.GetRideExceptionsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRideExceptionsListCompleted);
            }
            this.InvokeAsync("GetRideExceptionsList", new object[] {
                        sessionId,
                        language}, this.GetRideExceptionsListOperationCompleted, userState);
        }
        
        private void OnGetRideExceptionsListCompleted(object arg) {
            if ((this.GetRideExceptionsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRideExceptionsListCompleted(this, new GetRideExceptionsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/GetOrderHistory", RequestNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ResponseNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public GetOrdersListCallResult GetOrderHistory(string sessionId, string email, string password) {
            object[] results = this.Invoke("GetOrderHistory", new object[] {
                        sessionId,
                        email,
                        password});
            return ((GetOrdersListCallResult)(results[0]));
        }
        
        public System.IAsyncResult BeginGetOrderHistory(string sessionId, string email, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrderHistory", new object[] {
                        sessionId,
                        email,
                        password}, callback, asyncState);
        }
        
        public GetOrdersListCallResult EndGetOrderHistory(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetOrdersListCallResult)(results[0]));
        }
        
        public void GetOrderHistoryAsync(string sessionId, string email, string password) {
            this.GetOrderHistoryAsync(sessionId, email, password, null);
        }
        
        public void GetOrderHistoryAsync(string sessionId, string email, string password, object userState) {
            if ((this.GetOrderHistoryOperationCompleted == null)) {
                this.GetOrderHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderHistoryCompleted);
            }
            this.InvokeAsync("GetOrderHistory", new object[] {
                        sessionId,
                        email,
                        password}, this.GetOrderHistoryOperationCompleted, userState);
        }
        
        private void OnGetOrderHistoryCompleted(object arg) {
            if ((this.GetOrderHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderHistoryCompleted(this, new GetOrderHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/GetOrderHistoryEx", RequestNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ResponseNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public GetOrdersListCallResult GetOrderHistoryEx(string sessionId, string email, string password, System.DateTime dtFrom, System.DateTime dtTo) {
            object[] results = this.Invoke("GetOrderHistoryEx", new object[] {
                        sessionId,
                        email,
                        password,
                        dtFrom,
                        dtTo});
            return ((GetOrdersListCallResult)(results[0]));
        }
        
        public System.IAsyncResult BeginGetOrderHistoryEx(string sessionId, string email, string password, System.DateTime dtFrom, System.DateTime dtTo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrderHistoryEx", new object[] {
                        sessionId,
                        email,
                        password,
                        dtFrom,
                        dtTo}, callback, asyncState);
        }
        
        public GetOrdersListCallResult EndGetOrderHistoryEx(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetOrdersListCallResult)(results[0]));
        }
        
        public void GetOrderHistoryExAsync(string sessionId, string email, string password, System.DateTime dtFrom, System.DateTime dtTo) {
            this.GetOrderHistoryExAsync(sessionId, email, password, dtFrom, dtTo, null);
        }
        
        public void GetOrderHistoryExAsync(string sessionId, string email, string password, System.DateTime dtFrom, System.DateTime dtTo, object userState) {
            if ((this.GetOrderHistoryExOperationCompleted == null)) {
                this.GetOrderHistoryExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderHistoryExCompleted);
            }
            this.InvokeAsync("GetOrderHistoryEx", new object[] {
                        sessionId,
                        email,
                        password,
                        dtFrom,
                        dtTo}, this.GetOrderHistoryExOperationCompleted, userState);
        }
        
        private void OnGetOrderHistoryExCompleted(object arg) {
            if ((this.GetOrderHistoryExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderHistoryExCompleted(this, new GetOrderHistoryExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/GetOrdersList", RequestNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ResponseNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public GetOrdersListCallResult GetOrdersList(string sessionId, string email, string password) {
            object[] results = this.Invoke("GetOrdersList", new object[] {
                        sessionId,
                        email,
                        password});
            return ((GetOrdersListCallResult)(results[0]));
        }
        
        public System.IAsyncResult BeginGetOrdersList(string sessionId, string email, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrdersList", new object[] {
                        sessionId,
                        email,
                        password}, callback, asyncState);
        }
        
        public GetOrdersListCallResult EndGetOrdersList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetOrdersListCallResult)(results[0]));
        }
        
        public void GetOrdersListAsync(string sessionId, string email, string password) {
            this.GetOrdersListAsync(sessionId, email, password, null);
        }
        
        public void GetOrdersListAsync(string sessionId, string email, string password, object userState) {
            if ((this.GetOrdersListOperationCompleted == null)) {
                this.GetOrdersListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdersListCompleted);
            }
            this.InvokeAsync("GetOrdersList", new object[] {
                        sessionId,
                        email,
                        password}, this.GetOrdersListOperationCompleted, userState);
        }
        
        private void OnGetOrdersListCompleted(object arg) {
            if ((this.GetOrdersListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdersListCompleted(this, new GetOrdersListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/CreateOrder", RequestNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ResponseNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public OrderCallResult CreateOrder(string sesssionId, string email, string password, OrderInfo orderInfo) {
            object[] results = this.Invoke("CreateOrder", new object[] {
                        sesssionId,
                        email,
                        password,
                        orderInfo});
            return ((OrderCallResult)(results[0]));
        }
        
        public System.IAsyncResult BeginCreateOrder(string sesssionId, string email, string password, OrderInfo orderInfo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateOrder", new object[] {
                        sesssionId,
                        email,
                        password,
                        orderInfo}, callback, asyncState);
        }
        
        public OrderCallResult EndCreateOrder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrderCallResult)(results[0]));
        }
        
        public void CreateOrderAsync(string sesssionId, string email, string password, OrderInfo orderInfo) {
            this.CreateOrderAsync(sesssionId, email, password, orderInfo, null);
        }
        
        public void CreateOrderAsync(string sesssionId, string email, string password, OrderInfo orderInfo, object userState) {
            if ((this.CreateOrderOperationCompleted == null)) {
                this.CreateOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrderCompleted);
            }
            this.InvokeAsync("CreateOrder", new object[] {
                        sesssionId,
                        email,
                        password,
                        orderInfo}, this.CreateOrderOperationCompleted, userState);
        }
        
        private void OnCreateOrderCompleted(object arg) {
            if ((this.CreateOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrderCompleted(this, new CreateOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/ChangeOrder", RequestNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ResponseNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public OrderCallResult ChangeOrder(string sesssionId, string email, string password, OrderInfo orderInfo) {
            object[] results = this.Invoke("ChangeOrder", new object[] {
                        sesssionId,
                        email,
                        password,
                        orderInfo});
            return ((OrderCallResult)(results[0]));
        }
        
        public System.IAsyncResult BeginChangeOrder(string sesssionId, string email, string password, OrderInfo orderInfo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeOrder", new object[] {
                        sesssionId,
                        email,
                        password,
                        orderInfo}, callback, asyncState);
        }
        
        public OrderCallResult EndChangeOrder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrderCallResult)(results[0]));
        }
        
        public void ChangeOrderAsync(string sesssionId, string email, string password, OrderInfo orderInfo) {
            this.ChangeOrderAsync(sesssionId, email, password, orderInfo, null);
        }
        
        public void ChangeOrderAsync(string sesssionId, string email, string password, OrderInfo orderInfo, object userState) {
            if ((this.ChangeOrderOperationCompleted == null)) {
                this.ChangeOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeOrderCompleted);
            }
            this.InvokeAsync("ChangeOrder", new object[] {
                        sesssionId,
                        email,
                        password,
                        orderInfo}, this.ChangeOrderOperationCompleted, userState);
        }
        
        private void OnChangeOrderCompleted(object arg) {
            if ((this.ChangeOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeOrderCompleted(this, new ChangeOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/CancelOrder", RequestNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ResponseNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public OrderCallResult CancelOrder(string sesssionId, string email, string password, OrderInfo orderInfo) {
            object[] results = this.Invoke("CancelOrder", new object[] {
                        sesssionId,
                        email,
                        password,
                        orderInfo});
            return ((OrderCallResult)(results[0]));
        }
        
        public System.IAsyncResult BeginCancelOrder(string sesssionId, string email, string password, OrderInfo orderInfo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CancelOrder", new object[] {
                        sesssionId,
                        email,
                        password,
                        orderInfo}, callback, asyncState);
        }
        
        public OrderCallResult EndCancelOrder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrderCallResult)(results[0]));
        }
        
        public void CancelOrderAsync(string sesssionId, string email, string password, OrderInfo orderInfo) {
            this.CancelOrderAsync(sesssionId, email, password, orderInfo, null);
        }
        
        public void CancelOrderAsync(string sesssionId, string email, string password, OrderInfo orderInfo, object userState) {
            if ((this.CancelOrderOperationCompleted == null)) {
                this.CancelOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelOrderCompleted);
            }
            this.InvokeAsync("CancelOrder", new object[] {
                        sesssionId,
                        email,
                        password,
                        orderInfo}, this.CancelOrderOperationCompleted, userState);
        }
        
        private void OnCancelOrderCompleted(object arg) {
            if ((this.CancelOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelOrderCompleted(this, new CancelOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/GetVehicleLocation", RequestNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ResponseNamespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public VehicleLocationCallResult GetVehicleLocation(string sesssionId, string email, string password, int orderId) {
            object[] results = this.Invoke("GetVehicleLocation", new object[] {
                        sesssionId,
                        email,
                        password,
                        orderId});
            return ((VehicleLocationCallResult)(results[0]));
        }
        
        public System.IAsyncResult BeginGetVehicleLocation(string sesssionId, string email, string password, int orderId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetVehicleLocation", new object[] {
                        sesssionId,
                        email,
                        password,
                        orderId}, callback, asyncState);
        }
        
        public VehicleLocationCallResult EndGetVehicleLocation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VehicleLocationCallResult)(results[0]));
        }
        
        public void GetVehicleLocationAsync(string sesssionId, string email, string password, int orderId) {
            this.GetVehicleLocationAsync(sesssionId, email, password, orderId, null);
        }
        
        public void GetVehicleLocationAsync(string sesssionId, string email, string password, int orderId, object userState) {
            if ((this.GetVehicleLocationOperationCompleted == null)) {
                this.GetVehicleLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleLocationCompleted);
            }
            this.InvokeAsync("GetVehicleLocation", new object[] {
                        sesssionId,
                        email,
                        password,
                        orderId}, this.GetVehicleLocationOperationCompleted, userState);
        }
        
        private void OnGetVehicleLocationCompleted(object arg) {
            if ((this.GetVehicleLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleLocationCompleted(this, new GetVehicleLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public partial class AccountCallResult {
        
        /// <remarks/>
        public ErrorCode Error;
        
        /// <remarks/>
        public string ErrorMessage;
        
        /// <remarks/>
        public AccountInfo Account;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public enum ErrorCode {
        
        /// <remarks/>
        NoError,
        
        /// <remarks/>
        InvalidLoginInfo,
        
        /// <remarks/>
        AccountAlreadyExist,
        
        /// <remarks/>
        AccessDenied,
        
        /// <remarks/>
        Exception,
        
        /// <remarks/>
        IBSError,
        
        /// <remarks/>
        DataError,

        /// <remarks/>
        AccountNotValidated,
	}
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public partial class AccountInfo {
        
        /// <remarks/>
        public string Email;
        
        /// <remarks/>
        public string Password;
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public string FirstName;
        
        /// <remarks/>
        public string LastName;
        
        /// <remarks/>
        public string PhoneNumber;
        
        /// <remarks/>
        public string MobileNumber;
        
        /// <remarks/>
        public string Language;
        
        /// <remarks/>
        public int PreferenceCompanyId;
        
        /// <remarks/>
        public int PreferenceVehicleTypeId;
        
        /// <remarks/>
        public int PreferenceNumberOfPassenger;
        
        /// <remarks/>
        public int PreferenceChargeTypeId;
        
        /// <remarks/>
        public RideException[] PreferenceRideExceptions;
        
        /// <remarks/>
        public AccountAddress[] Addresses;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public partial class RideException {
        
        /// <remarks/>
        public int Id;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public bool Value;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public partial class AccountAddress {
        
        /// <remarks/>
        public int Id;
        
        /// <remarks/>
        public string LocationName;
        
        /// <remarks/>
        public string AddressAndCity;
        
        /// <remarks/>
        public string Appartment;
        
        /// <remarks/>
        public string Province;
        
        /// <remarks/>
        public string PostalCode;
        
        /// <remarks/>
        public double Longitude;
        
        /// <remarks/>
        public double Latitude;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public partial class CallResult {
        
        /// <remarks/>
        public ErrorCode Error;
        
        /// <remarks/>
        public string ErrorMessage;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public partial class CompaniesListCallResult {
        
        /// <remarks/>
        public ErrorCode Error;
        
        /// <remarks/>
        public string ErrorMessage;
        
        /// <remarks/>
        public Company[] Companies;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public partial class Company {
        
        /// <remarks/>
        public int Id;
        
        /// <remarks/>
        public string Name;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public partial class NotesListCallResult {
        
        /// <remarks/>
        public ErrorCode Error;
        
        /// <remarks/>
        public string ErrorMessage;
        
        /// <remarks/>
        public Note[] Notes;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public partial class Note {
        
        /// <remarks/>
        public int Id;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public bool Value;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public partial class VehiclesListCallResult {
        
        /// <remarks/>
        public ErrorCode Error;
        
        /// <remarks/>
        public string ErrorMessage;
        
        /// <remarks/>
        public Vehicle[] Vehicles;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public partial class Vehicle {
        
        /// <remarks/>
        public string Id;
        
        /// <remarks/>
        public string Description;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public partial class OrderStatusListCallResult {
        
        /// <remarks/>
        public ErrorCode Error;
        
        /// <remarks/>
        public string ErrorMessage;
        
        /// <remarks/>
        public OrderStatus[] OrderStatus;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public partial class OrderStatus {
        
        /// <remarks/>
        public int Id;
        
        /// <remarks/>
        public string Description;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public partial class ChargeTypesListCallResult {
        
        /// <remarks/>
        public ErrorCode Error;
        
        /// <remarks/>
        public string ErrorMessage;
        
        /// <remarks/>
        public ChargeType[] ChargeTypes;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public partial class ChargeType {
        
        /// <remarks/>
        public int Id;
        
        /// <remarks/>
        public string Description;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public partial class RideExceptionsListCallResult {
        
        /// <remarks/>
        public ErrorCode Error;
        
        /// <remarks/>
        public string ErrorMessage;
        
        /// <remarks/>
        public RideException[] RideExceptions;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public partial class GetOrdersListCallResult {
        
        /// <remarks/>
        public ErrorCode Error;
        
        /// <remarks/>
        public string ErrorMessage;
        
        /// <remarks/>
        public OrderInfo[] OrderInfos;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public partial class OrderInfo {
        
        /// <remarks/>
        public int Id;
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string ContactPhone;
        
        /// <remarks/>
        public System.DateTime PickupTime;
        
        /// <remarks/>
        public AccountAddress PickupAddress;
        
        /// <remarks/>
        public string RingCode;
        
        /// <remarks/>
        public AccountAddress DropoffAddress;
        
        /// <remarks/>
        public int CompanyId;
        
        /// <remarks/>
        public int VehicleTypeId;
        
        /// <remarks/>
        public int ChargeTypeId;
        
        /// <remarks/>
        public int NumberOfPassenger;
        
        /// <remarks/>
        public OrderStatus Status;
        
        /// <remarks/>
        public string MobileNote;
        
        /// <remarks/>
        public Note[] Notes;
        
        /// <remarks/>
        public RideException[] RideExceptions;
        
        /// <remarks/>
        public System.DateTime OrderDate;
        
        /// <remarks/>
        public string NoVehicle;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public partial class OrderCallResult {
        
        /// <remarks/>
        public int OrderId;
        
        /// <remarks/>
        public ErrorCode Error;
        
        /// <remarks/>
        public string ErrorMessage;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://taxidiamondwebbook.dyndns.org/TaxiMobileWebService/")]
    public partial class VehicleLocationCallResult {
        
        /// <remarks/>
        public ErrorCode Error;
        
        /// <remarks/>
        public string ErrorMessage;
        
        /// <remarks/>
        public string NoVehicle;
        
        /// <remarks/>
        public OrderStatus OrderStatus;
        
        /// <remarks/>
        public double Longitude;
        
        /// <remarks/>
        public double Latitude;
    }
    
    public partial class AuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    public delegate void AuthenticateCompletedEventHandler(object sender, AuthenticateCompletedEventArgs args);
    
    public partial class GetAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AccountCallResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountCallResult)(this.results[0]));
            }
        }
    }
    
    public delegate void GetAccountCompletedEventHandler(object sender, GetAccountCompletedEventArgs args);
    
    public partial class CreateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AccountCallResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountCallResult)(this.results[0]));
            }
        }
    }
    
    public delegate void CreateAccountCompletedEventHandler(object sender, CreateAccountCompletedEventArgs args);
    
    public partial class UpdateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AccountCallResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountCallResult)(this.results[0]));
            }
        }
    }
    
    public delegate void UpdateAccountCompletedEventHandler(object sender, UpdateAccountCompletedEventArgs args);
    
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CallResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallResult)(this.results[0]));
            }
        }
    }
    
    public delegate void ResetPasswordCompletedEventHandler(object sender, ResetPasswordCompletedEventArgs args);
    
    public partial class UpdatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CallResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallResult)(this.results[0]));
            }
        }
    }
    
    public delegate void UpdatePasswordCompletedEventHandler(object sender, UpdatePasswordCompletedEventArgs args);
    
    public partial class GetCompaniesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompaniesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CompaniesListCallResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompaniesListCallResult)(this.results[0]));
            }
        }
    }
    
    public delegate void GetCompaniesListCompletedEventHandler(object sender, GetCompaniesListCompletedEventArgs args);
    
    public partial class GetNotesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNotesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public NotesListCallResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NotesListCallResult)(this.results[0]));
            }
        }
    }
    
    public delegate void GetNotesListCompletedEventHandler(object sender, GetNotesListCompletedEventArgs args);
    
    public partial class GetVehiclesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehiclesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public VehiclesListCallResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehiclesListCallResult)(this.results[0]));
            }
        }
    }
    
    public delegate void GetVehiclesListCompletedEventHandler(object sender, GetVehiclesListCompletedEventArgs args);
    
    public partial class GetOrderStatusListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderStatusListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OrderStatusListCallResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderStatusListCallResult)(this.results[0]));
            }
        }
    }
    
    public delegate void GetOrderStatusListCompletedEventHandler(object sender, GetOrderStatusListCompletedEventArgs args);
    
    public partial class GetChargeTypesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChargeTypesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ChargeTypesListCallResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChargeTypesListCallResult)(this.results[0]));
            }
        }
    }
    
    public delegate void GetChargeTypesListCompletedEventHandler(object sender, GetChargeTypesListCompletedEventArgs args);
    
    public partial class GetRideExceptionsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRideExceptionsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RideExceptionsListCallResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RideExceptionsListCallResult)(this.results[0]));
            }
        }
    }
    
    public delegate void GetRideExceptionsListCompletedEventHandler(object sender, GetRideExceptionsListCompletedEventArgs args);
    
    public partial class GetOrderHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GetOrdersListCallResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetOrdersListCallResult)(this.results[0]));
            }
        }
    }
    
    public delegate void GetOrderHistoryCompletedEventHandler(object sender, GetOrderHistoryCompletedEventArgs args);
    
    public partial class GetOrderHistoryExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderHistoryExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GetOrdersListCallResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetOrdersListCallResult)(this.results[0]));
            }
        }
    }
    
    public delegate void GetOrderHistoryExCompletedEventHandler(object sender, GetOrderHistoryExCompletedEventArgs args);
    
    public partial class GetOrdersListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdersListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public GetOrdersListCallResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetOrdersListCallResult)(this.results[0]));
            }
        }
    }
    
    public delegate void GetOrdersListCompletedEventHandler(object sender, GetOrdersListCompletedEventArgs args);
    
    public partial class CreateOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OrderCallResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderCallResult)(this.results[0]));
            }
        }
    }
    
    public delegate void CreateOrderCompletedEventHandler(object sender, CreateOrderCompletedEventArgs args);
    
    public partial class ChangeOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OrderCallResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderCallResult)(this.results[0]));
            }
        }
    }
    
    public delegate void ChangeOrderCompletedEventHandler(object sender, ChangeOrderCompletedEventArgs args);
    
    public partial class CancelOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OrderCallResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderCallResult)(this.results[0]));
            }
        }
    }
    
    public delegate void CancelOrderCompletedEventHandler(object sender, CancelOrderCompletedEventArgs args);
    
    public partial class GetVehicleLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public VehicleLocationCallResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VehicleLocationCallResult)(this.results[0]));
            }
        }
    }
    
    public delegate void GetVehicleLocationCompletedEventHandler(object sender, GetVehicleLocationCompletedEventArgs args);
}
