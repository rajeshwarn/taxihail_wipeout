{"Name":"Card.io for iOS","Id":1292,"Alias":"cardioios","Description":"Card.io is a library for iOS and Android that can scan credit card details in from the device\u0027s camera similar to a barcode scanner.  Card.io makes scanning and entering Credit Card information simple.\n\n## Features\n \n - **Live Camera Card Scanning** - Quick and simple integration.  Get up and running in 5 minutes.\n - **Optional Manual Entry** - Users can choose to type their credit cards in.  Card.io provides a slick interface for manual card entry.\n - **Secure** - No credit card information is stored or transmitted.\n - **Free** - SDK\u0027s are free for both Android and iOS.\n \n\n## Learn More\nLearn more about Card.io by visiting http://www.card.io","Version":"3.10.0.2","Summary":"Credit card scanning for mobile apps","QuickStart":"## Adding card.io to your iOS app\n\nThe most simple way to integrate card.io into your iOS app is to use the `PaymentViewController` just as you would any other UIViewController.  You will need to pass in an instance of `PaymentViewControllerDelegate` to the constructor so you can handle when a card is scanned, or the user has cancelled scanning.\n\n```\n// Create the delegate to handle events\nvar paymentDelegate = PaymentViewControllerDelegate();\npaymentDelegate.OnScanCompleted += (viewController, cardInfo) =\u003e {\n\n\tif (cardInfo == null) {\n\t\tConsole.WriteLine(\"Scanning Canceled!\");\n\t} else {\n\t\tConsole.WriteLine(\"Card Scanned: \" + cardInfo.CardNumber);\n\t}\t\n\t\n\tviewController.DismissViewController(true, null);\n};\n\n// Create and Show the View Controller\nvar paymentViewController = new PaymentViewController(paymentDelegate);\n\n// Display the card.io interface\nPresentViewController(paymentViewController, true);\n```\n","Hash":"bcd2fbccf5f61da3168a0fa9b9a092d6","TargetPlatforms":["ios"],"TrialHash":null}